{"version":3,"sources":["../node_modules/regenerate-unicode-properties sync /^/.//.*/.js$","components/Navigation/SliderMenu.tsx","util/firebase.tsx","components/Form/Alert.tsx","components/Form/Question.tsx","components/PastAnswers/PastAnswers.tsx","components/Question/QuestionInterface.tsx","QuestionList.tsx","components/Resume/Resume.tsx","components/SignupPage/Signup.tsx","components/Home/Home.tsx","components/About/About.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","SliderMenu","handleResume","props","history","push","handleMenu","pageWrapId","outerContainerId","isOpen","this","open","onStateChange","state","handleMenuStateChange","className","question","questions","length","Grid","container","spacing","item","xs","style","color","href","target","rel","width","height","src","frameBorder","allow","allowFullScreen","Divider","variant","backgroundColor","value","userID","onChange","onUserIDChange","Button","size","onClick","handleSaveState","handleLoadState","handleStart","toggleAdmin","React","Component","withRouter","firebaseConfig","require","firebaseApp","firebase","getRandomInt","max","Math","floor","random","QuestionType","CustomAlert","errorAlert","successAlert","renderText","pass","alertData","correctAnswer","percentage","totalTries","Row","marginBottom","Col","Alert","completed","onClose","handleAlertClose","dismissible","TabPanel","children","index","other","hidden","aria-labelledby","maxWidth","Question","handleAnswerChange","newValue","answer","checkAns","ans","type","Checkboxes","Set","toggleComplete","as","bs","a","has","eqSet","selected","handleClickQuestionView","i","setState","view","handleCheckboxAnsChange","event","checked","add","delete","renderQuestion","EditableCode","renderEditableCode","MultipleChoice","renderMCQ","renderCheckboxes","HTMLCode","renderHtmlCode","qn","questionText","options","key","selection","text","questionTutorial","OverlayTrigger","placement","overlay","Tooltip","hint","wrapEnabled","mode","theme","name","readOnly","tabSize","editorProps","$blockScrolling","Tabs","textColor","centered","TabIndicatorProps","Tab","label","onChangeIndex","Paper","dangerouslySetInnerHTML","__html","feedbackText","defaultAnswer","lineHeight","q","Container","prevQuestion","resetAnswer","marginLeft","isLoading","CircularProgress","checkAnswer","nextQuestion","disabled","lastQuestion","PastAnswers","showAnswer","handlePastAnswerSelect","currQ","pastAnswers","fluid","position","top","FormControl","Select","MenuItem","pastAnswer","overflow","errorMessage","QuestionInterface","showPastAnswers","handlePastAnswerSwitch","handleCloseHistory","handleAbout","marginTop","fontSize","showPrintMargin","Box","component","mb","borderColor","Rating","feedbackRating","onFeedbackRatingChange","window","setTimeout","loggedIn","saveState","emptyIcon","handleStartOver","handleNextQuestion","handlePrevQuestion","handleCheckAnswer","handleResetAnswer","renderPastAnswers","renderContent","database","ref","on","snapshot","data","val","off","listQuestions","showAlert","v","handleClickQuestion","display","questionTitle","FormGroup","row","right","FormControlLabel","control","Switch","labelPlacement","testCode","exportCode","startDateTime","completedDateTime","Resume","handleFacebook","preventDefault","provider","FacebookAuthProvider","auth","signInWithPopup","then","result","user","uid","catch","error","console","log","handleGoogle","GoogleAuthProvider","textAlign","fontWeight","fullWidth","path","mdiGoogle","fill","Signup","uidArray","onSignup","once","err","onSubmit","required","Home","About","Carousel","Item","App","openMenu","returnedData","showSnackBar","timeVisited","Date","questionURL","axios","post","headers","Accept","res","isComplete","htmlFeedback","db","wrongAnswer","update","userId","currentQuestion","values","prompt","forEach","onAuthStateChanged","currentuser","currentUser","username","displayName","exact","render","n","Snackbar","anchorOrigin","horizontal","vertical","autoHideDuration","message","action","IconButton","TransitionComponent","Slide","direction","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6kBAAA,IAAIA,EAAM,CACT,6BAA8B,IAC9B,uCAAwC,IACxC,kCAAmC,IACnC,2BAA4B,IAC5B,gCAAiC,IACjC,oCAAqC,IACrC,qCAAsC,IACtC,sCAAuC,IACvC,6BAA8B,IAC9B,+CAAgD,IAChD,+CAAgD,IAChD,+CAAgD,IAChD,oDAAqD,IACrD,+CAAgD,IAChD,+CAAgD,IAChD,4BAA6B,IAC7B,oDAAqD,IACrD,kCAAmC,IACnC,iCAAkC,IAClC,6BAA8B,IAC9B,uCAAwC,IACxC,sCAAuC,IACvC,2CAA4C,IAC5C,0CAA2C,IAC3C,6CAA8C,IAC9C,gCAAiC,IACjC,qCAAsC,IACtC,uCAAwC,IACxC,iCAAkC,IAClC,2CAA4C,IAC5C,4CAA6C,IAC7C,mCAAoC,IACpC,gCAAiC,IACjC,mCAAoC,IACpC,oCAAqC,IACrC,+CAAgD,IAChD,iCAAkC,IAClC,4BAA6B,IAC7B,+CAAgD,IAChD,sCAAuC,IACvC,2CAA4C,IAC5C,sCAAuC,IACvC,+BAAgC,IAChC,0CAA2C,IAC3C,yCAA0C,IAC1C,mCAAoC,IACpC,4CAA6C,IAC7C,yCAA0C,IAC1C,iCAAkC,IAClC,0CAA2C,IAC3C,mCAAoC,IACpC,oCAAqC,IACrC,iCAAkC,IAClC,qCAAsC,IACtC,0CAA2C,IAC3C,8CAA+C,IAC/C,gCAAiC,IACjC,wCAAyC,IACzC,yCAA0C,IAC1C,uCAAwC,IACxC,uCAAwC,IACxC,0CAA2C,IAC3C,+BAAgC,IAChC,4CAA6C,IAC7C,+BAAgC,IAChC,sCAAuC,IACvC,uCAAwC,IACxC,yCAA0C,IAC1C,6BAA8B,IAC9B,oCAAqC,IACrC,wCAAyC,IACzC,wCAAyC,IACzC,wCAAyC,IACzC,+BAAgC,IAChC,yCAA0C,IAC1C,8BAA+B,IAC/B,qCAAsC,IACtC,qCAAsC,IACtC,0CAA2C,IAC3C,qCAAsC,IACtC,4CAA6C,IAC7C,oCAAqC,IACrC,oCAAqC,IACrC,kCAAmC,IACnC,wCAAyC,IACzC,qCAAsC,IACtC,kCAAmC,IACnC,+BAAgC,IAChC,yCAA0C,IAC1C,mCAAoC,IACpC,yCAA0C,IAC1C,oBAAqB,IACrB,mBAAoB,IACpB,oCAAqC,IACrC,qBAAsB,IACtB,uBAAwB,IACxB,sBAAuB,IACvB,uBAAwB,IACxB,oBAAqB,IACrB,wBAAyB,IACzB,oBAAqB,IACrB,sBAAuB,IACvB,wBAAyB,IACzB,uBAAwB,IACxB,qBAAsB,IACtB,sBAAuB,IACvB,uBAAwB,IACxB,oBAAqB,IACrB,kCAAmC,IACnC,qBAAsB,IACtB,iCAAkC,IAClC,qBAAsB,IACtB,mBAAoB,IACpB,uBAAwB,IACxB,qBAAsB,IACtB,qBAAsB,IACtB,wBAAyB,IACzB,sBAAuB,IACvB,uBAAwB,IACxB,sBAAuB,IACvB,yBAA0B,IAC1B,oBAAqB,IACrB,uBAAwB,IACxB,mCAAoC,IACpC,sBAAuB,IACvB,sBAAuB,IACvB,uBAAwB,IACxB,uBAAwB,IACxB,yBAA0B,IAC1B,qBAAsB,IACtB,sBAAuB,IACvB,oBAAqB,IACrB,uBAAwB,IACxB,4BAA6B,IAC7B,uBAAwB,IACxB,kBAAmB,IACnB,qBAAsB,IACtB,8BAA+B,IAC/B,sBAAuB,IACvB,qBAAsB,IACtB,qBAAsB,IACtB,uBAAwB,IACxB,+BAAgC,IAChC,wBAAyB,IACzB,oCAAqC,IACrC,qCAAsC,IACtC,uBAAwB,IACxB,qBAAsB,IACtB,sBAAuB,IACvB,uBAAwB,IACxB,uBAAwB,IACxB,yBAA0B,IAC1B,oBAAqB,IACrB,qBAAsB,IACtB,wBAAyB,IACzB,kBAAmB,IACnB,oBAAqB,IACrB,qBAAsB,IACtB,oBAAqB,IACrB,uBAAwB,IACxB,uBAAwB,IACxB,mBAAoB,IACpB,qBAAsB,IACtB,qBAAsB,IACtB,uBAAwB,IACxB,sBAAuB,IACvB,wBAAyB,IACzB,sBAAuB,IACvB,yBAA0B,IAC1B,sBAAuB,IACvB,4BAA6B,IAC7B,0BAA2B,IAC3B,2BAA4B,IAC5B,4BAA6B,IAC7B,+BAAgC,IAChC,mCAAoC,IACpC,mBAAoB,IACpB,mBAAoB,IACpB,wBAAyB,IACzB,kBAAmB,IACnB,sBAAuB,IACvB,sBAAuB,IACvB,wBAAyB,IACzB,0BAA2B,IAC3B,0BAA2B,IAC3B,mBAAoB,IACpB,kBAAmB,IACnB,oBAAqB,IACrB,qCAAsC,IACtC,oBAAqB,IACrB,uBAAwB,IACxB,4BAA6B,IAC7B,yBAA0B,IAC1B,gCAAiC,IACjC,yBAA0B,IAC1B,0BAA2B,IAC3B,0BAA2B,IAC3B,gCAAiC,IACjC,yBAA0B,IAC1B,oBAAqB,IACrB,oBAAqB,IACrB,sBAAuB,IACvB,2BAA4B,IAC5B,wBAAyB,IACzB,0BAA2B,IAC3B,uBAAwB,IACxB,yBAA0B,IAC1B,8BAA+B,IAC/B,qBAAsB,IACtB,oBAAqB,IACrB,wBAAyB,IACzB,yBAA0B,IAC1B,sBAAuB,IACvB,sBAAuB,IACvB,sBAAuB,IACvB,0BAA2B,IAC3B,sBAAuB,IACvB,sBAAuB,IACvB,2BAA4B,IAC5B,sBAAuB,IACvB,wBAAyB,IACzB,2BAA4B,IAC5B,qBAAsB,IACtB,sBAAuB,IACvB,uBAAwB,IACxB,qBAAsB,IACtB,uBAAwB,IACxB,uBAAwB,IACxB,oBAAqB,IACrB,oBAAqB,IACrB,qBAAsB,IACtB,qBAAsB,IACtB,qBAAsB,IACtB,mBAAoB,IACpB,sBAAuB,IACvB,uBAAwB,IACxB,sBAAuB,IACvB,uBAAwB,IACxB,kBAAmB,IACnB,qBAAsB,IACtB,0BAA2B,IAC3B,iBAAkB,IAClB,+BAAgC,IAChC,+BAAgC,IAChC,8BAA+B,IAC/B,+CAAgD,IAChD,gCAAiC,IACjC,kCAAmC,IACnC,iCAAkC,IAClC,kCAAmC,IACnC,+BAAgC,IAChC,mCAAoC,IACpC,+BAAgC,IAChC,iCAAkC,IAClC,mCAAoC,IACpC,kCAAmC,IACnC,gCAAiC,IACjC,iCAAkC,IAClC,kCAAmC,IACnC,+BAAgC,IAChC,6CAA8C,IAC9C,gCAAiC,IACjC,4CAA6C,IAC7C,gCAAiC,IACjC,8BAA+B,IAC/B,kCAAmC,IACnC,gCAAiC,IACjC,gCAAiC,IACjC,mCAAoC,IACpC,iCAAkC,IAClC,kCAAmC,IACnC,iCAAkC,IAClC,oCAAqC,IACrC,+BAAgC,IAChC,kCAAmC,IACnC,8CAA+C,IAC/C,iCAAkC,IAClC,iCAAkC,IAClC,kCAAmC,IACnC,kCAAmC,IACnC,oCAAqC,IACrC,gCAAiC,IACjC,iCAAkC,IAClC,+BAAgC,IAChC,kCAAmC,IACnC,uCAAwC,IACxC,kCAAmC,IACnC,6BAA8B,IAC9B,gCAAiC,IACjC,yCAA0C,IAC1C,iCAAkC,IAClC,gCAAiC,IACjC,gCAAiC,IACjC,kCAAmC,IACnC,0CAA2C,IAC3C,mCAAoC,IACpC,+CAAgD,IAChD,gDAAiD,IACjD,kCAAmC,IACnC,gCAAiC,IACjC,iCAAkC,IAClC,kCAAmC,IACnC,kCAAmC,IACnC,oCAAqC,IACrC,+BAAgC,IAChC,gCAAiC,IACjC,mCAAoC,IACpC,6BAA8B,IAC9B,+BAAgC,IAChC,gCAAiC,IACjC,+BAAgC,IAChC,kCAAmC,IACnC,kCAAmC,IACnC,8BAA+B,IAC/B,gCAAiC,IACjC,gCAAiC,IACjC,kCAAmC,IACnC,iCAAkC,IAClC,mCAAoC,IACpC,iCAAkC,IAClC,oCAAqC,IACrC,iCAAkC,IAClC,uCAAwC,IACxC,qCAAsC,IACtC,sCAAuC,IACvC,uCAAwC,IACxC,0CAA2C,IAC3C,8CAA+C,IAC/C,8BAA+B,IAC/B,8BAA+B,IAC/B,mCAAoC,IACpC,6BAA8B,IAC9B,iCAAkC,IAClC,iCAAkC,IAClC,mCAAoC,IACpC,qCAAsC,IACtC,qCAAsC,IACtC,8BAA+B,IAC/B,6BAA8B,IAC9B,+BAAgC,IAChC,gDAAiD,IACjD,+BAAgC,IAChC,kCAAmC,IACnC,uCAAwC,IACxC,oCAAqC,IACrC,2CAA4C,IAC5C,oCAAqC,IACrC,qCAAsC,IACtC,qCAAsC,IACtC,2CAA4C,IAC5C,oCAAqC,IACrC,+BAAgC,IAChC,+BAAgC,IAChC,iCAAkC,IAClC,sCAAuC,IACvC,mCAAoC,IACpC,qCAAsC,IACtC,kCAAmC,IACnC,oCAAqC,IACrC,yCAA0C,IAC1C,gCAAiC,IACjC,+BAAgC,IAChC,mCAAoC,IACpC,oCAAqC,IACrC,iCAAkC,IAClC,iCAAkC,IAClC,iCAAkC,IAClC,qCAAsC,IACtC,iCAAkC,IAClC,iCAAkC,IAClC,sCAAuC,IACvC,iCAAkC,IAClC,mCAAoC,IACpC,sCAAuC,IACvC,gCAAiC,IACjC,iCAAkC,IAClC,kCAAmC,IACnC,gCAAiC,IACjC,kCAAmC,IACnC,kCAAmC,IACnC,+BAAgC,IAChC,+BAAgC,IAChC,gCAAiC,IACjC,gCAAiC,IACjC,gCAAiC,IACjC,8BAA+B,IAC/B,iCAAkC,IAClC,kCAAmC,IACnC,iCAAkC,IAClC,kCAAmC,IACnC,6BAA8B,IAC9B,gCAAiC,IACjC,qCAAsC,IACtC,4BAA6B,IAC7B,0CAA2C,IAC3C,aAAc,IACd,uBAAwB,KAIzB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,6WCzYdY,E,2MAEFC,aAAe,WACX,EAAKC,MAAMC,QAAQC,KAAK,SACxB,EAAKF,MAAMG,YAAW,I,wEAGhB,IAAD,OAEL,OACI,kBAAC,OAAD,CAAMC,WAAY,YAAaC,iBAAkB,OAC3CC,OAAQC,KAAKP,MAAMQ,KACnBC,cAAe,SAACC,GAAD,OAAW,EAAKV,MAAMW,sBAAsBD,IAC3DE,UAAU,cAEXL,KAAKP,MAAMa,SAAW,GAAKN,KAAKP,MAAMa,SAAWN,KAAKP,MAAMc,UAAUC,OACnE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGN,UAAU,SAClC,kBAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,0BAAMC,MAAO,CAACC,MAAO,UAArB,qFAIJ,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,0BAAMC,MAAO,CAACC,MAAO,UACjB,uBAAGC,KAAK,gCAAgCC,OAAO,SAASC,IAAI,uBAA5D,oBAGR,kBAACT,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,0BAAMC,MAAO,CAACC,MAAO,UACjB,uBAAGC,KAAK,0DAA0DC,OAAO,SACtEC,IAAI,uBADP,2BAIR,kBAACT,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,0BAAMC,MAAO,CAACC,MAAO,UAArB,iDACA,4BAAQI,MAAM,OAAOC,OAAO,OAAOC,IAAI,4CAC/BC,YAAY,IACZC,MAAM,0EACNC,iBAAe,KAG3B,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACY,EAAA,EAAD,CAASC,QAAQ,SAASZ,MAAO,CAACa,gBAAiB,WAEvD,kBAAClB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,0BAAMC,MAAO,CAACC,MAAO,UAArB,2EAKJ,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,2BAAOR,UAAU,4BACb,2BAAOA,UAAU,8BAA8BuB,MAAO5B,KAAKP,MAAMoC,OAC1DC,SAAU,SAAC/C,GACP,EAAKU,MAAMsC,eAAehD,EAAEkC,OAAOW,UAG9C,0BAAMvB,UAAU,uBACZ,0BAAMA,UAAU,kBAAhB,mBAGR,yBAAKA,UAAU,UACX,kBAAC2B,EAAA,EAAD,CAAQN,QAAQ,WAAWrB,UAAU,eAAe4B,KAAK,QACjDC,QAASlC,KAAKP,MAAM0C,iBAD5B,QAIA,kBAACH,EAAA,EAAD,CAAQN,QAAQ,WAAWrB,UAAU,uBAAuB4B,KAAK,QACzDC,QAAS,kBAAM,EAAKzC,MAAM2C,iBAAgB,KADlD,WAOZ,kBAAC3B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIR,UAAU,oDACzB,kBAAC2B,EAAA,EAAD,CAAQN,QAAQ,WAAWrB,UAAU,eAAe4B,KAAK,QACjDC,QAASlC,KAAKP,MAAM4C,aAD5B,UAKJ,kBAAC5B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIR,UAAU,oDAEzB,kBAAC2B,EAAA,EAAD,CAAQN,QAAQ,WAAWrB,UAAU,eAC7B6B,QAASlC,KAAKR,cADtB,WAMJ,kBAACiB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIR,UAAU,oDACzB,kBAAC2B,EAAA,EAAD,CAAQN,QAAQ,WAAWrB,UAAU,eAC7B6B,QAASlC,KAAKP,MAAM6C,aAD5B,eAIJ,kBAAC7B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACY,EAAA,EAAD,CAASC,QAAQ,SAASZ,MAAO,CAACa,gBAAiB,WAEvD,kBAAClB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,0BAAMC,MAAO,CAACC,MAAO,UAArB,4I,GAjGHwB,IAAMC,WA6GhBC,cAAWlD,G,0BClItBmD,G,cAAiBC,EAAQ,MAChBC,EAAcC,gBAAuBH,G,+ECWlD,SAASI,EAAaC,GAClB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,I,IC4BrCI,EDWGC,E,2MAlCXjD,MAAQ,CACJkD,WAAY,CAAC,kEACbC,aAAc,CAAC,8E,EAGnBC,WAAa,SAACC,GACV,GAAIA,EAAM,CACN,IAAIF,EAAe,EAAKnD,MAAMmD,aAE9B,OADAA,EAAa3D,KAAb,+CAA0DqD,KAAKC,MAAM,EAAKxD,MAAMgE,UAAU,EAAKhE,MAAMa,UAAUoD,eAA/G,0CACOJ,EAAaR,EAAaQ,EAAa9C,SAE9C,IAAI6C,EAAa,EAAKlD,MAAMkD,WACtBM,EAAaX,KAAKC,MAAO,EAAKxD,MAAMgE,UAAU,EAAKhE,MAAMa,UAAUoD,cAAgB,EAAKjE,MAAMgE,UAAU,EAAKhE,MAAMa,UAAUsD,WAAc,KAEjJ,OADAP,EAAW1D,KAAX,kFAA2FgE,EAA3F,gCACON,EAAWP,EAAaO,EAAW7C,U,wEAK9C,OACI,kBAACqD,EAAA,EAAD,CAAKxD,UAAU,mDAAmDS,MAAO,CAAEgD,aAAc,KACrF,kBAACC,EAAA,EAAD,CAAKlD,GAAI,IACL,kBAACmD,EAAA,EAAD,CACItC,QAAS1B,KAAKP,MAAMc,UAAUP,KAAKP,MAAMa,UAAU2D,UAAY,UAAY,SAC3EC,QAASlE,KAAKP,MAAM0E,iBACpBC,aAAW,GACVpE,KAAKuD,WAAWvD,KAAKP,MAAMc,UAAUP,KAAKP,MAAMa,UAAU2D,kB,GA5BzD1B,IAAMC,W,yJCgChC,SAAS6B,GAAS5E,GAAa,IACpB6E,EAAoC7E,EAApC6E,SAAU1C,EAA0BnC,EAA1BmC,MAAO2C,EAAmB9E,EAAnB8E,MAAUC,EADR,YACiB/E,EADjB,8BAG1B,OACI,uCACIgF,OAAQ7C,IAAU2C,EAClB5F,GAAE,0BAAqB4F,GACvBG,kBAAA,qBAA+BH,GAC/BzD,MAAO,CAAC6D,SAAU,OAAQvD,OAAQ,SAC9BoD,GAEHF,I,SAlBDnB,O,+BAAAA,I,mCAAAA,I,2BAAAA,I,wBAAAA,M,KA2VGyB,O,YAvTX,WAAYnF,GAAiB,IAAD,8BACxB,4CAAMA,KAOVoF,mBAAqB,SAACC,GAClB,EAAKrF,MAAMa,SAASyE,OAASD,GATL,EAY5BE,SAAW,WACP,IAAIC,EAEAA,EADA,EAAKxF,MAAMa,SAAS4E,OAAS/B,EAAagC,WACpC,IAAIC,IAAI,EAAK3F,MAAMa,SAASyE,QAE5B,IAAIK,IAAI,CAAC,EAAK3F,MAAMa,SAASyE,SAEvC,EAAKtF,MAAM4F,eA8RnB,SAAeC,EAAcC,GACzB,GAAID,EAAGrD,OAASsD,EAAGtD,KAAM,OAAO,EADO,2BAEvC,YAAcqD,EAAd,oDAASE,EAAT,QAAkB,IAAKD,EAAGE,IAAID,GAAI,OAAO,GAFF,kFAGvC,OAAO,EAjSuBE,CAAMT,EAAK,EAAK9E,MAAMwF,YAnBxB,EAsB5BC,wBAA0B,SAAC7G,EAAQ8G,GAC/B,EAAKC,SAAS,CACVC,KAAMF,KAxBc,EA4B5BG,wBAA0B,SAACC,EAAYJ,GACnC,IAAIF,EAAW,EAAKxF,MAAMwF,SACtBM,EAAMhF,OAAOiF,QACbP,EAASQ,IAAIN,GAEbF,EAASS,OAAOP,GAEpB,EAAKC,SAAS,CAACH,SAAUA,KAnCD,EAsC5BU,eAAiB,WACb,OAAQ,EAAK5G,MAAMa,SAAS4E,MACxB,KAAK/B,EAAamD,aACd,OAAO,EAAKC,qBAChB,KAAKpD,EAAaqD,eACd,OAAO,EAAKC,YAChB,KAAKtD,EAAagC,WACd,OAAO,EAAKuB,mBAChB,KAAKvD,EAAawD,SACd,OAAO,EAAKC,mBA/CI,EAqD5BF,iBAAmB,WAGf,IAFA,IAAMG,EAAK,EAAKpH,MAAMa,SAASwG,aAC3BC,EAAU,GAFO,WAGZlB,GACLkB,EAAQpH,KACJ,2BAAOqH,IAAKnB,GACPgB,EAAGhB,GACJ,2BAAOX,KAAK,WAAWpD,SAAU,SAAC/C,GAAD,OAAO,EAAKiH,wBAAwBjH,EAAG8G,MACxE,gCALHA,EAAI,EAAGA,EAAIgB,EAAGrG,OAAQqF,IAAM,EAA5BA,GAST,OACI,kBAAChC,EAAA,EAAD,CAAKxD,UAAU,SACX,6BAAK,uBAAGA,UAAU,wBAAuB,gCAASwG,EAAG,MACrD,6BAAME,GACN,kBAAC/E,EAAA,EAAD,CAAQ3B,UAAU,eAAe6B,QAAS,EAAK8C,UAA/C,oBArEgB,EA0E5ByB,UAAY,WAGR,IAFA,IAAMI,EAAK,EAAKpH,MAAMa,SAASwG,aAC3BG,EAAY,GAFF,WAGLpB,GACL,IAAMqB,EAAOL,EAAGhB,GACZxF,EAAY,aACZ,EAAKF,MAAMwF,SAASF,IAAII,KACxBxF,GAAa,iBAEjB4G,EAAUtH,KACN,yBAAKuC,QAAS,kBAAM,EAAK4D,SAAS,CAACH,SAAU,IAAIP,IAAI,CAACS,OAAOmB,IAAKnB,EAC7DxF,UAAWA,GAAW,0BAAMA,UAAU,mBAAmB6G,MAR7DrB,EAAI,EAAGA,EAAIgB,EAAGrG,OAAQqF,IAAM,EAA5BA,GAWT,OACI,kBAAChC,EAAA,EAAD,CAAKxD,UAAU,QAAQS,MAAO,CAACM,OAAQ,SACnC,kBAAC2C,EAAA,EAAD,CAAKlD,GAAI,GACL,yBAAKR,UAAU,6BAA6BS,MAAO,CAACgD,aAAc,KAC9D,uBAAGzD,UAAU,wBAAuB,gCAAS,EAAKZ,MAAMa,SAAS6G,mBACjE,6BACI,kBAACC,EAAA,EAAD,CACIJ,IAAI,SACJK,UAAU,SACVC,QACI,kBAACC,EAAA,EAAD,CAAS5I,GAAG,QACP,EAAKc,MAAMa,SAASkH,OAI7B,kBAAC,IAAD,SAIZ,kBAAC,IAAD,CACIC,aAAW,EACXrG,OAAO,MACPD,MAAM,OACNuG,KAAK,aACLC,MAAM,UACNC,KAAK,cACLC,UAAU,EACVC,QAAS,EACTC,YAAa,CACTC,iBAAiB,GAErBpG,MAAOiF,EAAG,MAGlB,kBAAC9C,EAAA,EAAD,CAAK1D,UAAU,UACV4G,KA3HW,EAiI5BV,mBAAqB,WACjB,OACI,kBAAC1C,EAAA,EAAD,CAAKxD,UAAU,QAAQS,MAAO,CAACM,OAAQ,SACnC,kBAAC2C,EAAA,EAAD,CAAKlD,GAAI,EAAGC,MAAO,CAACM,OAAQ,QAASf,UAAU,sBAC3C,kBAAC4H,GAAA,EAAD,CACIrG,MAAO,EAAKzB,MAAM4F,KAClBjE,SAAU,EAAK8D,wBACfsC,UAAU,UACVxG,QAAQ,YACRyG,UAAQ,EACRC,kBACI,CACI/H,UAAW,eAInB,kBAACgI,GAAA,EAAD,CAAKC,MAAM,eAAe1G,MAAO,IACjC,kBAACyG,GAAA,EAAD,CAAKC,MAAM,SAAS1G,MAAO,KAE/B,kBAAC,KAAD,CACI2C,MAAO,EAAKpE,MAAM4F,KAClBwC,cAAe,EAAK3C,wBACpBvF,UAAU,eAEV,kBAACgE,GAAD,CAAUzC,MAAO,EAAKzB,MAAM4F,KAAMxB,MAAO,GACrC,2BAAI,EAAK9E,MAAMa,SAAS6G,mBAE5B,kBAAC9C,GAAD,CAAUzC,MAAO,EAAKzB,MAAM4F,KAAMxB,MAAO,GACrC,kBAACiE,GAAA,EAAD,KACI,yBACIC,wBAAyB,CAACC,OAAQ,EAAKjJ,MAAMa,SAASqI,oBAM1E,kBAAC5E,EAAA,EAAD,CAAKlD,GAAI,EAAGC,MAAO,CAACM,OAAQ,SACxB,yBAAKf,UAAU,6BAA6BS,MAAO,CAACgD,aAAc,KAC9D,uBAAGzD,UAAU,wBAAuB,gCAAS,EAAKZ,MAAMa,SAASwG,eACjE,6BACI,kBAACM,EAAA,EAAD,CACIJ,IAAI,SACJK,UAAU,SACVC,QACI,kBAACC,EAAA,EAAD,CAAS5I,GAAG,QACP,EAAKc,MAAMa,SAASkH,OAI7B,kBAAC,IAAD,SAIZ,kBAAC,IAAD,CACIC,aAAW,EACXrG,OAAO,MACPD,MAAM,OACNuG,KAAK,aACLC,MAAM,UACNC,KAAK,cACL9F,SAAU,EAAK+C,mBACfiD,QAAS,EACTC,YAAa,CACTC,iBAAiB,GAErBpG,MAAO,EAAKnC,MAAMa,SAASyE,YAlMnB,EA0M5B6B,eAAiB,WACb,OACI,kBAAC,KAAD,CAAc3H,KAAM,EAAKQ,MAAMa,SAASsI,eACpC,kBAAC/E,EAAA,EAAD,CAAKxD,UAAU,QAAQS,MAAO,CAACM,OAAQ,SACnC,kBAAC2C,EAAA,EAAD,CAAKlD,GAAI,EAAGR,UAAU,mCAClB,kBAAC4H,GAAA,EAAD,CACIrG,MAAO,EAAKzB,MAAM4F,KAClBjE,SAAU,EAAK8D,wBACfsC,UAAU,UACVxG,QAAQ,YACRyG,UAAQ,EACRC,kBACI,CACI/H,UAAW,eAInB,kBAACgI,GAAA,EAAD,CAAKC,MAAM,eAAe1G,MAAO,IACjC,kBAACyG,GAAA,EAAD,CAAKC,MAAM,YAAY1G,MAAO,KAElC,kBAAC,KAAD,CACI2C,MAAO,EAAKpE,MAAM4F,KAClBwC,cAAe,EAAK3C,wBACpBvF,UAAU,eAEV,kBAACgE,GAAD,CAAUzC,MAAO,EAAKzB,MAAM4F,KAAMxB,MAAO,GACrC,yBAAKzD,MAAO,CAAC+H,WAAY,IACrB,2BAAI,EAAKpJ,MAAMa,SAAS6G,oBAGhC,kBAAC9C,GAAD,CAAUzC,MAAO,EAAKzB,MAAM4F,KAAMxB,MAAO,GACrC,kBAAC,KAAD,SAIZ,kBAACR,EAAA,EAAD,CAAKlD,GAAI,GACL,yBAAKR,UAAU,6BAA6BS,MAAO,CAACgD,aAAc,KAC9D,uBAAGzD,UAAU,wBAAuB,gCAAS,EAAKZ,MAAMa,SAAS6G,mBAEjE,kBAACC,EAAA,EAAD,CACIJ,IAAI,SACJK,UAAU,SACVC,QACI,kBAACC,EAAA,EAAD,CAAS5I,GAAG,QACP,EAAKc,MAAMa,SAASkH,OAI7B,kBAAC,IAAD,QAGR,kBAACgB,GAAA,EAAD,CAAO1H,MAAO,CAACM,OAAQ,QACnB,kBAAC,KAAD,MACA,kBAAC,KAAD,WA7PpB,EAAKjB,MAAQ,CACTwF,SAAU,IAAIP,IACdW,KAAM,GAJc,E,sEAwQxB,IAAM+C,EAAI9I,KAAKP,MAAMa,SACrB,OACI,kBAACyI,EAAA,EAAD,CAAW1I,UAAU,gEAChBL,KAAKqG,iBACN,kBAACxC,EAAA,EAAD,CAAKxD,UAAU,gBAEX,kBAAC2B,EAAA,EAAD,CAAQN,QAAQ,WAAWrB,UAAU,eAAe4B,KAAK,QACjDC,QAASlC,KAAKP,MAAMuJ,cAD5B,YAIA,kBAAChH,EAAA,EAAD,CAAQN,QAAQ,WAAWrB,UAAU,eAAe4B,KAAK,QACjDC,QAASlC,KAAKP,MAAMwJ,YACpBnI,MAAO,CAACoI,WAAY,KAF5B,SAMClJ,KAAKP,MAAM0J,UACR,kBAACC,EAAA,EAAD,CAAkB/I,UAAU,0BAC1B,yBAAKA,UAAU,WACZyI,EAAE5D,OAAS/B,EAAaqD,eACrB,kBAACxE,EAAA,EAAD,CAAQN,QAAQ,WAAWrB,UAAU,eAAe4B,KAAK,QACjDC,QAASlC,KAAKP,MAAM4J,aAD5B,OAIA,kBAACrH,EAAA,EAAD,CAAQN,QAAQ,WAAWrB,UAAU,eAAe4B,KAAK,QACjDC,QAASlC,KAAKgF,UADtB,kBAIZ,kBAAChD,EAAA,EAAD,CAAQN,QAAQ,WAAWrB,UAAU,eAAe4B,KAAK,QACjDC,QAASlC,KAAKP,MAAM6J,aAAcxI,MAAO,CAACoI,WAAY,IACtDK,UAAWT,EAAE7E,WAEhBjE,KAAKP,MAAM+J,aAAe,SAAW,c,GAzSvCjH,IAAMC,W,8BCEdiH,G,2MA/DXtJ,MAAQ,CACJuJ,WAAY,G,EAGhBC,uBAAyB,SAAC5K,GACtB,EAAK+G,SAAS,CAAE4D,WAAY3K,EAAEkC,OAAOW,S,wEAIrC,IAAMrB,EAAYP,KAAKP,MAAMc,UACvBqJ,EAAQ5J,KAAKP,MAAMa,SAEzB,OAAKC,EAAUqJ,GAAOC,aAAuD,IAAxCtJ,EAAUqJ,GAAOC,YAAYrJ,OAO9D,kBAACuI,EAAA,EAAD,CAAWe,OAAK,GACZ,kBAACjG,EAAA,EAAD,CAAK/C,MAAO,CAAEiJ,SAAU,WAAYC,IAAK,UACrC,kBAACxB,GAAA,EAAD,KACI,kBAACyB,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQtI,MAAO5B,KAAKG,MAAMuJ,WAAY5H,SAAU9B,KAAK2J,wBAChDpJ,EAAUqJ,GAAOC,YAAYrL,KAAI,SAACyG,EAAKV,GACpC,OACI,kBAAC4F,GAAA,EAAD,CAAUvI,MAAO2C,GAAQA,EAAQ,EAAjC,aAA8CA,EAAQ,UAO9E,kBAACV,EAAA,EAAD,CAAK/C,MAAO,CAAEM,OAAQ,SAClB,kBAAC2C,EAAA,EAAD,CAAKlD,GAAI,EAAGC,MAAO,CAAEM,OAAQ,SACzB,kBAAC,IAAD,CACIyG,UAAU,EACVJ,aAAW,EACXrG,OAAO,OACPD,MAAM,OACNuG,KAAK,aACLC,MAAM,UACNC,KAAK,eACLE,QAAS,EACTC,YAAa,CACTC,iBAAiB,GAErBpG,MAAOrB,EAAUqJ,GAAOC,YAAY7J,KAAKG,MAAMuJ,YAAYU,WAC3DtJ,MAAO,CAAE6D,SAAU,QAG3B,kBAACZ,EAAA,EAAD,CAAKlD,GAAI,EAAGC,MAAO,CAAEM,OAAQ,SACzB,kBAACoH,GAAA,EAAD,CAAO1H,MAAO,CAAEM,OAAQ,OAAQiJ,SAAU,WACtC,yBACI5B,wBAAyB,CAAEC,OAAQnI,EAAUqJ,GAAOC,YAAY7J,KAAKG,MAAMuJ,YAAYY,oBAxCvG,wBAAIjK,UAAU,eAAd,8C,GAhBUkC,IAAMC,W,yCCkC1B+H,I,kNACFpK,MAAQ,CACJqK,iBAAiB,EACjB/G,UAAU,I,EAkBdgH,uBAAyB,SAAC1L,GACtB,EAAK+G,SAAS,CAAC0E,gBAAiBzL,EAAEkC,OAAOiF,W,EAG7CwE,mBAAqB,WACjB,EAAK5E,SAAS,CAAC0E,iBAAiB,K,EAGpChL,aAAe,WACX,EAAKC,MAAMC,QAAQC,KAAK,U,EAG5BgL,YAAc,WACV,EAAKlL,MAAMC,QAAQC,KAAK,W,EAG5B0G,eAAiB,WACb,IAAM9F,EAAY,EAAKd,MAAMc,UACvBqJ,EAAQ,EAAKnK,MAAMa,SACzB,OAAQsJ,GACJ,KAAK,EACD,OACI,yBAAKvJ,UAAU,gEACX,kBAAC,IAAD,CAAQA,UAAU,cAAlB,kDAGA,yBAAKA,UAAU,+DACVS,MAAO,CAAC8J,UAAW,SACpB,kBAAC,IAAD,CACI/C,UAAU,EACVJ,aAAW,EACXrG,OAAO,OACPD,MAAM,OACN0J,SAAU,GACVC,iBAAiB,EACjBpD,KAAK,aACLC,MAAM,UACNC,KAAK,eACLE,QAAS,EACTC,YAAa,CACTC,iBAAiB,GAErBpG,MAAOrB,EAAUqJ,GAAO9C,gBAGhC,yBAAKzG,UAAU,4BAA4BS,MAAO,CAACK,MAAM,QACrD,kBAACa,EAAA,EAAD,CAAQN,QAAQ,WAAWrB,UAAU,eAAe4B,KAAK,QACjDC,QAAS,EAAK1C,cADtB,UAIA,kBAACwC,EAAA,EAAD,CAAQN,QAAQ,WAAWrB,UAAU,eAAe4B,KAAK,QAAQnB,MAAO,CAACoI,WAAW,IAC5EhH,QAAS,EAAKyI,aADtB,YAIA,kBAAC3I,EAAA,EAAD,CAAQN,QAAQ,WAAWrB,UAAU,uBAAuB4B,KAAK,QACzDC,QAAS,EAAKzC,MAAM4C,aAD5B,WAOhB,KAAK9B,EAAUC,OACX,OACI,yBAAKH,UAAU,gEACX,kBAAC,IAAD,CAAQA,UAAU,cAAlB,2CAGA,uBAAGS,MAAO,CAACgD,aAAc,IAAzB,kCACA,kBAACiH,GAAA,EAAD,CAAKC,UAAU,WAAWC,GAAI,EAAGC,YAAY,eACzC,kBAACC,GAAA,EAAD,CACIvD,KAAK,oBACLhG,MAAO,EAAKnC,MAAM2L,eAClBtJ,SAAU,SAACmE,EAAOnB,GACd,EAAKrF,MAAM4L,uBAAuBvG,GAElCwG,OAAOC,YAAW,WACV,EAAK9L,MAAM+L,UACX,EAAK/L,MAAMgM,cAEjB,MAGNxJ,KAAK,QACLyJ,UAAW,kBAAC,KAAD,CAAgBb,SAAS,UAAU/J,MAAO,CAACC,MAAO,cAGrE,2EAAgD,uBAC5CC,KAAK,kHACLX,UAAU,iBAFkC,QAAhD,KAGA,kBAAC2B,EAAA,EAAD,CAAQN,QAAQ,WAAWrB,UAAU,eAAe4B,KAAK,QACjDC,QAAS,EAAKzC,MAAMkM,iBAD5B,eAMZ,QACI,OACI,kBAAC,GAAD,CAAUrL,SAAUC,EAAUqJ,GACpBrF,MAAOqF,EACPN,aAAc,EAAK7J,MAAMmM,mBACzB5C,aAAc,EAAKvJ,MAAMoM,mBACzBxC,YAAa,EAAK5J,MAAMqM,kBACxB7C,YAAa,EAAKxJ,MAAMsM,kBACxBvC,aAAcI,IAAUrJ,EAAUC,OAAS,EAC3C6E,eAAgB,EAAK5F,MAAM4F,eAC3B8D,UAAW,EAAK1J,MAAM0J,c,EAOhD6C,kBAAoB,WAChB,OAAO,kBAAC,GAAD,CAAazL,UAAW,EAAKd,MAAMc,UACtBD,SAAU,EAAKb,MAAMa,Y,EAG7C2L,cAAgB,WACZ,OAAK,EAAK9L,MAAMqK,gBAGL,EAAKwB,oBAFL,EAAK3F,kB,mFAtIO,IAAD,OACbzD,EAAYsJ,WAAWC,IAAvB,YACNC,GAAG,SAAU,SAACC,GACb,IAAIC,EAAOD,EAASE,MAEP,OAATD,GACA,EAAKxG,SAAS,CAAErC,UAAW6I,S,6CAMnC1J,EAAYsJ,WAAWC,IAAvB,mBAAuCnM,KAAKP,MAAMa,WAAYkM,Q,+BAgIxD,IAAD,OACCjM,EAAYP,KAAKP,MAAMc,UACvBqJ,EAAQ5J,KAAKP,MAAMa,SACnBmM,EAAgBzM,KAAKP,MAAMc,UAAU/B,KAAI,SAAC8B,EAAUiE,GACtD,GAAc,IAAVA,EACA,OAAO,KAEX,IAAIlE,EAAY,kBAOhB,OANIC,EAAS2D,YACT5D,GAAa,cAEbkE,IAAUqF,IACVvJ,GAAa,YAGb,kBAACgI,GAAA,EAAD,CAAKrB,IAAKzC,EACLlE,UAAS,4BACTiI,MACI,yBAAKjI,UAAU,6BACX,yBAAKA,UAAWA,GAAYkE,SAMjD,OACI,kBAACwE,EAAA,EAAD,CAAWe,OAAK,GACX9J,KAAKP,MAAMiN,UACR,kBAAC,EAAD,CAAavI,iBAAkBnE,KAAKP,MAAM0E,iBAC7B7D,SAAUN,KAAKP,MAAMa,SACrBC,UAAWP,KAAKP,MAAMc,UACtBkD,UAAWzD,KAAKG,MAAMsD,YAC9B,GAERmG,EAAQ,GAAKA,EAAQrJ,EAAUC,OAC5B,kBAACqD,EAAA,EAAD,CAAKxD,UAAU,oDACX,kBAAC4H,GAAA,EAAD,CACIrG,MAAOgI,EAAQ,EACf9H,SAAU,SAAC/C,EAAG4N,GACNpM,EAAUoM,EAAI,GAAG1I,YACjB,EAAKyG,qBACL,EAAKjL,MAAMmN,oBAAoBD,EAAI,KAG3CzE,UAAU,UACVxG,QAAQ,YACRyG,UAAQ,EACRC,kBACI,CACI/H,UAAW,aACXS,MAAO,CAAC+L,QAAS,UAIxBJ,IAEA,GACZ7C,EAAQ,GAAKA,EAAQrJ,EAAUC,OAC5B,kBAACqD,EAAA,EAAD,CAAKxD,UAAU,oDACX,4BAAKL,KAAKP,MAAMc,UAAUqJ,GAAOkD,eACjC,kBAACC,EAAA,EAAD,CAAWC,KAAG,EAAClM,MAAO,CAACiJ,SAAU,WAAYkD,MAAO,QAChD,kBAACC,EAAA,EAAD,CACInM,MAAM,UACNoM,QACI,kBAACC,EAAA,EAAD,CAAQlH,QAASlG,KAAKG,MAAMqK,gBACpB1I,SAAU9B,KAAKyK,uBACf7I,MAAM,oBAElB0G,MAAM,oBACN+E,eAAe,YAIzB,GAEN,kBAACxJ,EAAA,EAAD,CAAKxD,UAAU,oDACX,kBAAC0D,EAAA,EAAD,KACK/D,KAAKiM,uB,GA/NEzJ,cAwOjBC,eAAW8H,ICzRbhK,I,OACT,CACI,CACIuM,cAAe,GACf3F,iBAAkB,GAClBL,aAAc,yoBACd/B,OAAQ,GACR6D,cAAe,GACfpB,KAAM,GACNmB,aAAc,GACd1E,WAAW,EACXiB,KAAM/B,EAAamD,aACnBgH,SAAS,GACTC,WAAY,GACZ1D,YAAa,GACb2D,cAAe,KACfC,kBAAmB,MAEvB,CACIX,cAAe,WACf3F,iBAAkB,wGAClBL,aAAc,qDACdU,KAAM,oCACNzC,OAAQ,0EAMR6D,cAAe,0EAMfD,aAAc,GACd1E,WAAW,EACXiB,KAAM/B,EAAamD,aACnBgH,SAAS,yFAKTC,WAAY,GACZ1D,YAAa,GACb2D,cAAe,KACfC,kBAAmB,MAEvB,CACIX,cAAe,eACf3F,iBAAkB,sNAGlBL,aAAc,qDACdU,KAAM,gDACNzC,OAAO,4GAKP6D,cAAc,oHAMdD,aAAc,GACd1E,WAAW,EACXiB,KAAM/B,EAAamD,aACnBgH,SAAS,8PAQTC,WAAW,+EAKX1D,YAAa,GACb2D,cAAe,KACfC,kBAAmB,MAEvB,CACIX,cAAe,kBACf3F,iBAAkB,6GAClBL,aAAc,qDACdU,KAAM,2DACNzC,OAAQ,2CACR6D,cAAe,2CACfD,aAAc,GACd1E,WAAW,EACXiB,KAAM/B,EAAamD,aACnBgH,SAAS,6KAOTC,WAAY,6BACZ1D,YAAa,GACb2D,cAAe,KACfC,kBAAmB,MAEvB,CACIX,cAAe,kBACf3F,iBAAkB,4KAGlBL,aAAc,iDACdU,KAAM,gDACNzC,OAAO,mDAGP6D,cAAc,mDAGdD,aAAc,GACd1E,WAAW,EACXiB,KAAM/B,EAAamD,aACnBgH,SAAS,6OAQTC,WAAY,6BACZ1D,YAAa,GACb2D,cAAe,KACfC,kBAAmB,MAEvB,CACIX,cAAe,wBACf3F,iBAAkB,wMAClBL,aAAc,2BACdU,KAAM,oDACNzC,OAAO,yBAGP6D,cAAc,yBAGdD,aAAc,GACd1E,WAAW,EACXiB,KAAM/B,EAAamD,aACnBgH,SAAS,iOAQTC,WAAY,uBACZ1D,YAAa,GACb2D,cAAe,KACfC,kBAAmB,MAEvB,CACIX,cAAe,uBACf3F,iBAAiB,2UACjBL,aAAc,kCACdU,KAAM,0EACNzC,OAAO,gLAOP6D,cAAc,gLAOdD,aAAc,GACd1E,WAAW,EACXiB,KAAM/B,EAAamD,aACnBgH,SAAS,kSAQTC,WAAY,iCACZ1D,YAAa,GACb2D,cAAe,KACfC,kBAAmB,MAEvB,CACIX,cAAe,iCACf3F,iBAAkB,4GAClBL,aAAc,qDACdU,KAAM,qFACNzC,OAAO,sGAKP6D,cAAc,sGAKdD,aAAc,GACd1E,WAAW,EACXiB,KAAM/B,EAAamD,aACnBgH,SAAS,sMAKTC,WAAW,2BAEX1D,YAAa,GACb2D,cAAe,KACfC,kBAAmB,MAEvB,CACIX,cAAe,uBACf3F,iBAAkB,sIAClBL,aAAc,4EACdU,KAAM,wEACNzC,OAAO,8KAWP6D,cAAc,8KAWdD,aAAc,GACd1E,WAAW,EACXiB,KAAM/B,EAAamD,aACnBgH,SAAS,qGAKTC,WAAW,uBAEX1D,YAAa,GACb2D,cAAe,KACfC,kBAAmB,MAEvB,CACIX,cAAe,WACf3F,iBAAkB,uCAClBL,aAAc,CAAC,2wBAAD,0IAkCd/B,OAAQ,EACR6D,cAAe,GACfpB,KAAM,GACNmB,aAAc,GACd1E,WAAW,EACXiB,KAAM/B,EAAaqD,eACnB8G,SAAU,GACVC,WAAY,GACZ1D,YAAa,GACb2D,cAAe,KACfC,kBAAmB,MAEvB,CACIX,cAAe,uBACf3F,iBAAkB,8DAClBL,aAAc,sQACd/B,OAAQ,GACR6D,cACI,siCAgDJpB,KAAM,oIACNmB,aAAc,GACd1E,WAAW,EACXiB,KAAM/B,EAAawD,SACnB2G,SAAS,yIAKTC,WAAY,GACZ1D,YAAa,GACb2D,cAAe,KACfC,kBAAmB,Q,6BC/WzBC,I,kNAEFC,eAAiB,SAAC5O,GACdA,EAAE6O,iBACF,IAAMC,EAAW,IAAIhL,OAAciL,qBACnClL,EAAYmL,OAAOC,gBAAgBH,GAAUI,MAAK,SAACC,GAE/C,GAAe,OAAXA,GAAmC,OAAhBA,EAAOC,MAAqC,OAApBD,EAAOC,KAAKC,IAAc,CACrE,IAAMvM,EAASqM,EAAOC,KAAKC,IAC3B,EAAK3O,MAAMsC,eAAeF,GAC1B,EAAKpC,MAAM2C,iBAAgB,GAC3B,EAAK3C,MAAMC,QAAQC,KAAK,kBAE7B0O,OAAM,SAACC,GACNC,QAAQC,IAAIF,O,EAIpBG,aAAe,SAAC1P,GACZA,EAAE6O,iBACF,IAAMC,EAAW,IAAIhL,OAAc6L,mBACnC9L,EAAYmL,OAAOC,gBAAgBH,GAAUI,MAAK,SAACC,GAE/C,GAAe,OAAXA,GAAmC,OAAhBA,EAAOC,MAAqC,OAApBD,EAAOC,KAAKC,IAAc,CACrE,IAAMvM,EAASqM,EAAOC,KAAKC,IAC3B,EAAK3O,MAAMsC,eAAeF,GAC1B,EAAKpC,MAAM2C,iBAAgB,GAC3B,EAAK3C,MAAMC,QAAQC,KAAK,kBAG7B0O,OAAM,SAACC,GACNC,QAAQC,IAAIF,O,wEAIV,IAAD,OACL,OACI,yBAAKxN,MAAO,CAAEK,MAAO,MACjB,kBAACV,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIR,UAAU,oDACzB,0BAAMS,MAAO,CAAEC,MAAO,QAAS4N,UAAW,SAAUC,WAAY,SAAhE,yEAIJ,kBAACnO,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIR,UAAU,oDACzB,yBAAKA,UAAU,SACX,2BAAOA,UAAU,4BACb,2BAAOA,UAAU,8BAA8BuB,MAAO5B,KAAKP,MAAMoC,OAC7DC,SAAU,SAAC/C,GAAQ,EAAKU,MAAMsC,eAAehD,EAAEkC,OAAOW,UAE1D,0BAAMvB,UAAU,uBACZ,0BAAMA,UAAU,kBAAhB,mBAGR,yBAAKA,UAAU,UACX,kBAAC2B,EAAA,EAAD,CAAQN,QAAQ,WAAWrB,UAAU,eAAe4B,KAAK,QACrDC,QAASlC,KAAKP,MAAM0C,iBADxB,QAIA,kBAACH,EAAA,EAAD,CAAQN,QAAQ,WAAWrB,UAAU,uBAAuB4B,KAAK,QAC7DC,QAAS,kBAAI,EAAKzC,MAAM2C,iBAAgB,KAD5C,WAYZ,kBAAC3B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIR,UAAU,oDACzB,kBAAC2B,EAAA,EAAD,CAAQN,QAAQ,WAAWQ,QAASlC,KAAKyO,aAAcpO,UAAU,cAAcwO,WAAS,GACpF,8BAAM,kBAAC,KAAD,CAAMC,KAAMC,KAAW9M,KAAM,EAAGnB,MAAO,CAAEkO,KAAM,WAArD,mB,GAzEPzM,IAAMC,YAkFZC,eAAWiL,IChFpBuB,G,2MAEF9O,MAAQ,CACJ+O,SAAU,I,EAcdC,SAAW,SAACpQ,GACRA,EAAE6O,iBACF,EAAKnO,MAAM0C,kBACXmJ,OAAOC,YAAW,WACd,EAAK9L,MAAM4C,gBACb,M,EAGNoM,aAAe,SAAC1P,GACZA,EAAE6O,iBACF,IAAMC,EAAW,IAAIhL,OAAc6L,mBACnC9L,EAAYmL,OAAOC,gBAAgBH,GAAUI,MAAK,SAACC,GAE/C,GAAe,OAAXA,GAAmC,OAAhBA,EAAOC,MAAqC,OAApBD,EAAOC,KAAKC,IAAc,CACrE,IAAMvM,EAASqM,EAAOC,KAAKC,IAC3B,EAAK3O,MAAMsC,eAAeF,GAC1B,EAAKpC,MAAM0C,kBACXmJ,OAAOC,YAAW,WACd,EAAK9L,MAAM4C,gBACb,SAEPgM,OAAM,SAACC,GACNC,QAAQC,IAAIF,O,mFAjCO,IAAD,OACb1L,EAAYsJ,WAAWC,IAAvB,aACNiD,KAAK,SAASnB,MAAK,SAAC5B,GACnB,IAAMC,EAAOD,EAASE,MAClB2C,EAAW/P,OAAOD,KAAKoN,GAC3B,EAAKxG,SAAS,CAACoJ,SAAUA,OAC1Bb,OAAM,SAAAgB,GACLd,QAAQD,MAAMe,Q,+BA8BZ,IAAD,OACL,OACI,yBAAKvO,MAAO,CAACK,MAAO,MAChB,kBAACV,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIR,UAAU,oDACzB,kBAAC,IAAD,CAAQA,UAAU,gBAAlB,oGAKJ,kBAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIR,UAAU,oDAEzB,yBAAKA,UAAU,SACX,0BAAMiP,SAAUtP,KAAKmP,UACjB,2BAAO9O,UAAU,4BACb,2BAAOA,UAAU,8BAA8BuB,MAAO5B,KAAKP,MAAMoC,OAAQ0N,UAAQ,EAC1EzN,SAAU,SAAC/C,GACP,EAAKU,MAAMsC,eAAehD,EAAEkC,OAAOW,UAG9C,0BAAMvB,UAAU,uBAChB,0BAAMA,UAAU,kBAAhB,mBAGJ,yBAAKA,UAAU,UACX,kBAAC2B,EAAA,EAAD,CAAQN,QAAQ,WAAWrB,UAAU,uBAAuB4B,KAAK,QACzDiD,KAAK,UADb,gBAQhB,kBAACzE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACY,EAAA,EAAD,CAASC,QAAQ,SAASZ,MAAO,CAACa,gBAAiB,WAEvD,kBAAClB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIR,UAAU,oDACzB,kBAAC2B,EAAA,EAAD,CAAQN,QAAQ,WAAWQ,QAASlC,KAAKyO,aAAcpO,UAAU,cAAcwO,WAAS,GACpF,8BAAM,kBAAC,KAAD,CAAMC,KAAMC,KAAW9M,KAAM,EAAGnB,MAAO,CAAEkO,KAAM,WAArD,mB,GAjFPzM,IAAMC,WA4FZC,eAAWwM,IClGpBO,G,2MAEFhQ,aAAe,WACX,EAAKC,MAAMC,QAAQC,KAAK,U,EAI5BgL,YAAc,WACV,EAAKlL,MAAMC,QAAQC,KAAK,W,wEAIxB,IAAMY,EAAYP,KAAKP,MAAMc,UAC7B,OACI,yBAAKF,UAAU,gEACX,kBAAC,IAAD,CAAQA,UAAU,cAAlB,kDAGA,yBAAKA,UAAU,+DACVS,MAAO,CAAC8J,UAAW,SACpB,kBAAC,IAAD,CACI/C,UAAU,EACVJ,aAAW,EACXrG,OAAO,OACPD,MAAM,OACN0J,SAAU,GACVC,iBAAiB,EACjBpD,KAAK,aACLC,MAAM,UACNC,KAAK,eACLE,QAAS,EACTC,YAAa,CACTC,iBAAiB,GAErBpG,MAAOrB,EAAU,GAAGuG,gBAG5B,yBAAKzG,UAAU,4BAA4BS,MAAO,CAACK,MAAM,SACrD,kBAACa,EAAA,EAAD,CAAQN,QAAQ,WAAWrB,UAAU,eAAe4B,KAAK,QACjDC,QAASlC,KAAKR,cADtB,UAIA,kBAACwC,EAAA,EAAD,CAAQN,QAAQ,WAAWrB,UAAU,eAAe4B,KAAK,QAAQnB,MAAO,CAACoI,WAAW,IAC5EhH,QAASlC,KAAK2K,aADtB,YAIA,kBAAC3I,EAAA,EAAD,CAAQN,QAAQ,WAAWrB,UAAU,uBAAuB4B,KAAK,QACzDC,QAASlC,KAAKP,MAAM4C,aAD5B,e,GA9CDE,IAAMC,WAwDVC,eAAW+M,I,UC9DpBC,I,wLAIE,OACI,kBAAC1G,EAAA,EAAD,CAAWe,OAAK,EAAChJ,MAAO,CAACK,MAAO,QAC5B,kBAAC0C,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKlD,GAAI,GACL,kBAAC,IAAD,CAAQR,UAAU,gBAAlB,YAGA,uBAAGS,MAAO,CAACC,MAAO,UAAlB,0NAIA,uBAAGD,MAAO,CAACC,MAAO,UAAlB,yjBASA,uBAAGD,MAAO,CAACC,MAAO,UAAlB,qQAKJ,kBAACgD,EAAA,EAAD,CAAKlD,GAAI,GACL,kBAAC6O,GAAA,EAAD,CAAUrP,UAAU,SAChB,kBAACqP,GAAA,EAASC,KAAV,CAAetP,UAAU,cACrB,sJACmD,6BAAK,6BADxD,aACuE,6BADvE,uCAIJ,kBAACqP,GAAA,EAASC,KAAV,CAAetP,UAAU,cACrB,0NAIc,6BAAK,6BAJnB,YAIiC,6BAJjC,gCAOJ,kBAACqP,GAAA,EAASC,KAAV,CAAetP,UAAU,cACrB,iNAEgB,6BAAK,6BAFrB,YAEmC,6BAFnC,oC,GA7CZkC,IAAMC,YA2DXC,eAAWgN,I,ikBCvCpBG,G,2MAEFzP,MAAQ,CACJ0P,UAAU,EACVvP,SAAU,EACVwP,aAAc,KACdvP,UAAWA,GACX6K,eAAgB,EAChBjC,WAAW,EACXuD,WAAW,EACXqD,cAAc,EACdvE,UAAU,EACV4C,IAAK,GACL4B,YAAa,IAAIC,M,EA0BrBrQ,WAAa,SAACG,GACV,EAAK+F,SAAS,CAAC+J,SAAU9P,K,EAI7B6M,oBAAsB,SAAC/G,GACnB,EAAKC,SAAS,CACV+J,UAAU,EACVvP,SAAUuF,EACV6G,WAAW,K,EAInBtM,sBAAwB,SAACD,GACrB,EAAK2F,SAAS,CAAC+J,SAAU1P,EAAMJ,U,EAGnCsC,YAAc,WACV,GAAI,EAAKlC,MAAMqL,SAAU,CACrB,EAAK/L,MAAMC,QAAQC,KAAK,cACxB,IAAIY,EAAY,EAAKJ,MAAMI,UACQ,OAA/BA,EAAU,GAAGiN,gBACbjN,EAAU,GAAGiN,cAAgB,IAAIyC,MAErC,EAAK9N,kBACL,EAAK2D,SAAS,CAACxF,SAAU,EAAGuP,UAAU,EAAOtP,UAAWA,SAExD,EAAKd,MAAMC,QAAQC,KAAK,Y,EAIhCiM,mBAAqB,WACjB,EAAK9F,SAAS,CAACxF,SAAU,EAAKH,MAAMG,SAAW,EAAGoM,WAAW,IAC7D,IAAInM,EAAY,EAAKJ,MAAMI,UACvB,EAAKJ,MAAMG,WAAa,EAAKH,MAAMI,UAAUC,OAAS,GAAmD,OAA9C,EAAKL,MAAMI,UAAU,GAAGkN,kBACnFlN,EAAU,GAAGkN,kBAAoB,IAAIwC,KACmB,OAAjD1P,EAAU,EAAKJ,MAAMG,UAAUkN,gBACtCjN,EAAU,EAAKJ,MAAMG,UAAUkN,cAAgB,IAAIyC,MAEvD,EAAKnK,SAAS,CAACvF,UAAWA,IAC1B+K,OAAOC,YAAW,WACV,EAAKpL,MAAMqL,UACX,EAAKrJ,oBAEV,M,EAGP0J,mBAAqB,WACjB,EAAK/F,SAAS,CAACxF,SAAU,EAAKH,MAAMG,SAAW,EAAGoM,WAAW,K,EAGjEvI,iBAAmB,WACf,EAAK2B,SAAS,CAAC4G,WAAW,K,EAG9Bf,gBAAkB,WAEd,EAAK7F,SAAS,CAACxF,SAAU,K,EAG7ByL,kBAAoB,WAChB,IAAIxL,EAAY,EAAKJ,MAAMI,UACvBD,EAAWC,EAAU,EAAKJ,MAAMG,UACpCA,EAASyE,OAASzE,EAASsI,cAC3B,EAAK9C,SAAS,CAACvF,e,EAGnBuL,kB,sBAAoB,oCAAAtG,EAAA,6DAEhB,EAAKM,SAAS,CAACqD,WAAW,EAAMuD,WAAW,IAC1B,+DACbwD,EADa,+DACW,oBAAgB,EAAK/P,MAAMG,UACnDyE,EAAS,CACT,UAAa,QACb,MAAS,CACL,EAAK,EAAK5E,MAAMI,UAAU,EAAKJ,MAAMG,UAAUgN,UAEnD,SAAY,CACR,EAAK,EAAKnN,MAAMI,UAAU,EAAKJ,MAAMG,UAAUyE,OAAS,EAAK5E,MAAMI,UAAU,EAAKJ,MAAMG,UAAUiN,YAEtG,OAAU,CACN,EAAI,sCAdI,kBAkBuB4C,IAAMC,KAAKF,EAAX,MAA4BnL,GAAS,CACpEsL,QAAS,CACLC,OAAQ,sBApBJ,cAkBNC,EAlBM,QAuBRhQ,EAAY,EAAKJ,MAAMI,WACjB,EAAKJ,MAAMG,UAAU2D,UAAYsM,EAAIjE,KAAKkE,WACpDjQ,EAAU,EAAKJ,MAAMG,UAAUqI,aAAe4H,EAAIjE,KAAKmE,aACvDlQ,EAAU,EAAKJ,MAAMG,UAAUuJ,YAAYlK,KAAK,CAC5C6D,KAAM+M,EAAIjE,KAAKkE,WACfpG,WAAY7J,EAAU,EAAKJ,MAAMG,UAAUyE,OAC3CuF,aAAciG,EAAIjE,KAAKmE,eAE8B,OAArDlQ,EAAU,EAAKJ,MAAMG,UAAUmN,mBAA8B8C,EAAIjE,KAAKkE,aACtEjQ,EAAU,EAAKJ,MAAMG,UAAUmN,kBAAoB,IAAIwC,MAIvDS,EAAK9N,EAAYsJ,WAAWC,IAAvB,mBAAuC,EAAKhM,MAAMG,WApC/C,UAqCNoQ,EAAGtB,KAAK,SAASnB,MAAK,SAAC5B,GACzB,IAAIC,EAAOD,EAASE,MACP,OAATD,GACAA,EAAK1I,YAAc,EACf2M,EAAIjE,KAAKkE,WACTlE,EAAK5I,eAAiB,EAEtB4I,EAAKqE,aAAe,GAIpBrE,EADAiE,EAAIjE,KAAKkE,WACF,CACH9M,cAAe,EACfiN,YAAa,EACb/M,WAAY,GAGT,CACHF,cAAe,EACfiN,YAAa,EACb/M,WAAY,GAIxB8M,EAAGE,OAAOtE,MACX+B,OAAM,SAAAgB,GACLd,QAAQD,MAAMe,MA/DN,QAkEZ,EAAKvJ,SAAS,CAACvF,UAAWA,IACtB,EAAKJ,MAAMqL,UACX,EAAKrJ,kBApEG,kDAuEZoM,QAAQD,MAAR,MAvEY,yBAyEZ,EAAKxI,SAAS,CAACqD,WAAW,EAAOuD,WAAW,IAzEhC,6E,EA8EpBvK,gBAAkB,WACd,IAAMyF,EAAO,EAAKzH,MAAMiO,IACpB9B,EAAO,CACP/L,UAAW,EAAKJ,MAAMI,UACtBsQ,OAAQjJ,EACRwD,eAAgB,EAAKjL,MAAMiL,eAC3B0F,gBAAiB,EAAK3Q,MAAMG,UAEhCsC,EAAYsJ,WAAWC,IAAvB,oBAAwCvE,IAAQgJ,OAAOtE,GACvD,EAAKxG,SAAS,CAAC0F,UAAU,IAGzB+C,QAAQC,IAAI,4B,EAGhBpM,gBAAkB,SAAC2N,GACf,IAAMnI,EAAO,EAAKzH,MAAMiO,IACfxL,EAAYsJ,WAAWC,IAAvB,oBAAwCvE,IAC9CwH,KAAK,SAASnB,MAAK,SAAC5B,GACnB,IAAMC,EAAOD,EAASE,MACtB,GAAa,OAATD,EAAe,CAEf,IADA,IAAI/L,EAA6BpB,OAAO4R,OAAOzE,EAAK/L,WACpD,MAAcA,EAAd,eAAyB,CAApB,IAAIuI,EAAC,KACFA,EAAEe,YACFf,EAAEe,YAAc1K,OAAO4R,OAAOjI,EAAEe,aAEhCf,EAAEe,YAAc,GAEff,EAAE2E,oBACH3E,EAAE2E,kBAAoB,MAErB3E,EAAE0E,gBACH1E,EAAE0E,cAAgB,MAG1B,EAAK1H,SAAS,CACVvF,UAAWA,EACX6K,eAAgBkB,EAAKlB,eACrB9K,SAAUgM,EAAKwE,gBACftF,UAAU,IAGVuE,GACA,EAAKjK,SAAS,CACViK,cAAc,EACdF,UAAU,IAGlB,EAAKpQ,MAAMC,QAAQC,KAAK,SAE7B0O,OAAM,SAAAgB,GACLd,QAAQD,MAAMe,O,EAItB/M,YAAc,WAEV,GAAW,UADA0O,OAAO,yBACE,CAChB,IAAMzQ,EAAY,EAAKJ,MAAMI,UAC7BA,EAAU0Q,SAAQ,SAAAnI,GACdA,EAAE7E,WAAY,KAElB,EAAKxE,MAAMC,QAAQC,KAAK,KACxB,EAAKmG,SAAS,CACVvF,UAAWA,EACXD,SAAU,EACVuP,UAAU,M,EAKtBxK,eAAiB,SAACmL,GACd,IAAIjQ,EAAY,EAAKJ,MAAMI,UAC3BA,EAAU,EAAKJ,MAAMG,UAAU2D,UAAYuM,EACvCA,IACAjQ,EAAU,EAAKJ,MAAMG,UAAUmN,kBAAoB,IAAIwC,MAE3D,EAAKnK,SAAS,CAACvF,UAAWA,K,EAG9BwB,eAAiB,SAAC6F,GACd,EAAK9B,SAAS,CAACsI,IAAKxG,K,mFAzPG,IAAD,OACtBhF,EAAYmL,OAAOmD,oBAAmB,SAAA/C,GAClC,GAAIA,EAAM,CACN,IAAIgD,EAAcvO,EAAYmL,OAAOqD,YACjB,OAAhBD,IACA,EAAKrL,SAAS,CACVsI,IAAK+C,EAAY/C,IACjBiD,SAAUF,EAAYG,YACtB9F,UAAU,IAEd,EAAKpJ,iBAAgB,SAGzB,EAAK0D,SAAS,CAAC0F,UAAU,OAGjC,IAAIjL,EAAYP,KAAKG,MAAMI,UACQ,OAA/BA,EAAU,GAAGiN,gBACbjN,EAAU,GAAGiN,cAAgBxN,KAAKG,MAAM6P,aAE5ChQ,KAAK8F,SAAS,CAACvF,gB,+BAwOT,IAAD,OACCqJ,EAAQ5J,KAAKG,MAAMG,SACzB,OACI,yBAAKD,UAAU,OACX,kBAAC,EAAD,CAAYJ,KAAMD,KAAKG,MAAM0P,SAAUjQ,WAAYI,KAAKJ,WAC5CQ,sBAAuBJ,KAAKI,sBAC5BwM,oBAAqB5M,KAAK4M,oBAC1BvK,YAAarC,KAAKqC,YAClB9B,UAAWP,KAAKG,MAAMI,UACtBD,SAAUsJ,EACVtH,YAAatC,KAAKsC,YAClBH,gBAAiBnC,KAAKmC,gBACtBC,gBAAiBpC,KAAKoC,gBACtBP,OAAQ7B,KAAKG,MAAMiO,IACnBrM,eAAgB/B,KAAK+B,iBAEjC,kBAACgH,EAAA,EAAD,CAAWe,OAAK,EAACzJ,UAAU,yEAChB1B,GAAG,aAEV,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO4S,OAAK,EAACzC,KAAK,IAAI0C,OAAQ,SAAC/R,GAAD,OAAW,kBAAC,GAAD,iBAAUA,EAAV,CAAiBc,UAAW,EAAKJ,MAAMI,UACjCiL,SAAU,EAAKrL,MAAMqL,SACrBnJ,YAAa,EAAKA,kBAEjE,kBAAC,IAAD,CAAOkP,OAAK,EAACzC,KAAK,SAAS9D,UAAWyE,KACtC,kBAAC,IAAD,CAAO8B,OAAK,EAACzC,KAAK,aACX0C,OAAQ,SAAC/R,GAAD,OAAW,kBAAC,GAAD,iBAAuBA,EAAvB,CAA8Bc,UAAW,EAAKJ,MAAMI,UACjCD,SAAUsJ,EAAOvH,YAAa,EAAKA,YACnC+I,eAAgB,EAAKjL,MAAMiL,eAC3BO,gBAAiB,EAAKA,gBACtBe,UAAW,EAAKvM,MAAMuM,UACtBd,mBAAoB,EAAKA,mBACzBC,mBAAoB,EAAKA,mBACzBC,kBAAmB,EAAKA,kBACxBC,kBAAmB,EAAKA,kBACxB1G,eAAgB,EAAKA,eACrB8D,UAAW,EAAKhJ,MAAMgJ,UACtBhF,iBAAkB,EAAKA,iBACvByI,oBAAqB,EAAKA,oBAC1BnB,UAAW,EAAKtJ,gBAChBkJ,uBAAwB,SAACoG,GACrB,EAAK3L,SAAS,CAACsF,eAAgBqG,KAEnCjG,SAAU,EAAKrL,MAAMqL,eAGlE,kBAAC,IAAD,CAAO+F,OAAK,EAACzC,KAAK,QAAQ0C,OAAQ,SAAC/R,GAAD,OAAW,kBAAC,GAAD,iBAAYA,EAAZ,CACQ0C,gBAAiB,EAAKA,gBACtBC,gBAAiB,EAAKA,gBACtBP,OAAQ,EAAK1B,MAAMiO,IACnBrM,eAAgB,EAAKA,qBAE1E,kBAAC,IAAD,CAAOwP,OAAK,EAACzC,KAAK,UAAU0C,OAAQ,SAAC/R,GAAD,OAAW,kBAAC,GAAD,iBAAYA,EAAZ,CACQ0C,gBAAiB,EAAKA,gBACtBJ,eAAgB,EAAKA,eACrBF,OAAQ,EAAK1B,MAAMiO,IACnB/L,YAAa,EAAKA,mBAG5ErC,KAAKG,MAAM4P,aACR,kBAAC2B,EAAA,EAAD,CAAUC,aAAc,CAACC,WAAY,QAASC,SAAU,UAC9C5R,KAAMD,KAAKG,MAAM4P,aACjB+B,iBAAkB,IAClB5N,QAAS,WACL,EAAK4B,SAAS,CAACiK,cAAc,KAEjCgC,QAAS,0BAAMpT,GAAG,cAAT,yCACTqT,OACI,kBAACC,EAAA,EAAD,CACIjL,IAAI,QACJjG,MAAM,UACNmB,QAAS,WACL,EAAK4D,SAAS,CAACiK,cAAc,MAGjC,kBAAC,IAAD,OAGRmC,oBAAqB,SAACzS,GAClB,OAAO,kBAAC0S,EAAA,EAAD,iBAAW1S,EAAX,CAAkB2S,UAAU,WAE5C,S,GA7VX5P,aAsWHC,eAAWmN,ICvXNyC,QACW,cAA7B/G,OAAOgH,SAASC,UAEe,UAA7BjH,OAAOgH,SAASC,UAEhBjH,OAAOgH,SAASC,SAASC,MACvB,2DCXNC,IAASjB,OACL,kBAAC,IAAD,KACI,kBAAC,GAAD,OAEFkB,SAASC,eAAe,SDsHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7E,MAAK,SAAA8E,GACjCA,EAAaC,kB","file":"static/js/main.708792d4.chunk.js","sourcesContent":["var map = {\n\t\"./Binary_Property/ASCII.js\": 292,\n\t\"./Binary_Property/ASCII_Hex_Digit.js\": 293,\n\t\"./Binary_Property/Alphabetic.js\": 294,\n\t\"./Binary_Property/Any.js\": 295,\n\t\"./Binary_Property/Assigned.js\": 296,\n\t\"./Binary_Property/Bidi_Control.js\": 297,\n\t\"./Binary_Property/Bidi_Mirrored.js\": 298,\n\t\"./Binary_Property/Case_Ignorable.js\": 299,\n\t\"./Binary_Property/Cased.js\": 300,\n\t\"./Binary_Property/Changes_When_Casefolded.js\": 301,\n\t\"./Binary_Property/Changes_When_Casemapped.js\": 302,\n\t\"./Binary_Property/Changes_When_Lowercased.js\": 303,\n\t\"./Binary_Property/Changes_When_NFKC_Casefolded.js\": 304,\n\t\"./Binary_Property/Changes_When_Titlecased.js\": 305,\n\t\"./Binary_Property/Changes_When_Uppercased.js\": 306,\n\t\"./Binary_Property/Dash.js\": 307,\n\t\"./Binary_Property/Default_Ignorable_Code_Point.js\": 308,\n\t\"./Binary_Property/Deprecated.js\": 309,\n\t\"./Binary_Property/Diacritic.js\": 310,\n\t\"./Binary_Property/Emoji.js\": 311,\n\t\"./Binary_Property/Emoji_Component.js\": 312,\n\t\"./Binary_Property/Emoji_Modifier.js\": 313,\n\t\"./Binary_Property/Emoji_Modifier_Base.js\": 314,\n\t\"./Binary_Property/Emoji_Presentation.js\": 315,\n\t\"./Binary_Property/Extended_Pictographic.js\": 316,\n\t\"./Binary_Property/Extender.js\": 317,\n\t\"./Binary_Property/Grapheme_Base.js\": 318,\n\t\"./Binary_Property/Grapheme_Extend.js\": 319,\n\t\"./Binary_Property/Hex_Digit.js\": 320,\n\t\"./Binary_Property/IDS_Binary_Operator.js\": 321,\n\t\"./Binary_Property/IDS_Trinary_Operator.js\": 322,\n\t\"./Binary_Property/ID_Continue.js\": 323,\n\t\"./Binary_Property/ID_Start.js\": 324,\n\t\"./Binary_Property/Ideographic.js\": 325,\n\t\"./Binary_Property/Join_Control.js\": 326,\n\t\"./Binary_Property/Logical_Order_Exception.js\": 327,\n\t\"./Binary_Property/Lowercase.js\": 328,\n\t\"./Binary_Property/Math.js\": 329,\n\t\"./Binary_Property/Noncharacter_Code_Point.js\": 330,\n\t\"./Binary_Property/Pattern_Syntax.js\": 331,\n\t\"./Binary_Property/Pattern_White_Space.js\": 332,\n\t\"./Binary_Property/Quotation_Mark.js\": 333,\n\t\"./Binary_Property/Radical.js\": 334,\n\t\"./Binary_Property/Regional_Indicator.js\": 335,\n\t\"./Binary_Property/Sentence_Terminal.js\": 336,\n\t\"./Binary_Property/Soft_Dotted.js\": 337,\n\t\"./Binary_Property/Terminal_Punctuation.js\": 338,\n\t\"./Binary_Property/Unified_Ideograph.js\": 339,\n\t\"./Binary_Property/Uppercase.js\": 340,\n\t\"./Binary_Property/Variation_Selector.js\": 341,\n\t\"./Binary_Property/White_Space.js\": 342,\n\t\"./Binary_Property/XID_Continue.js\": 343,\n\t\"./Binary_Property/XID_Start.js\": 344,\n\t\"./General_Category/Cased_Letter.js\": 345,\n\t\"./General_Category/Close_Punctuation.js\": 346,\n\t\"./General_Category/Connector_Punctuation.js\": 347,\n\t\"./General_Category/Control.js\": 348,\n\t\"./General_Category/Currency_Symbol.js\": 349,\n\t\"./General_Category/Dash_Punctuation.js\": 350,\n\t\"./General_Category/Decimal_Number.js\": 351,\n\t\"./General_Category/Enclosing_Mark.js\": 352,\n\t\"./General_Category/Final_Punctuation.js\": 353,\n\t\"./General_Category/Format.js\": 354,\n\t\"./General_Category/Initial_Punctuation.js\": 355,\n\t\"./General_Category/Letter.js\": 356,\n\t\"./General_Category/Letter_Number.js\": 357,\n\t\"./General_Category/Line_Separator.js\": 358,\n\t\"./General_Category/Lowercase_Letter.js\": 359,\n\t\"./General_Category/Mark.js\": 360,\n\t\"./General_Category/Math_Symbol.js\": 361,\n\t\"./General_Category/Modifier_Letter.js\": 362,\n\t\"./General_Category/Modifier_Symbol.js\": 363,\n\t\"./General_Category/Nonspacing_Mark.js\": 364,\n\t\"./General_Category/Number.js\": 365,\n\t\"./General_Category/Open_Punctuation.js\": 366,\n\t\"./General_Category/Other.js\": 367,\n\t\"./General_Category/Other_Letter.js\": 368,\n\t\"./General_Category/Other_Number.js\": 369,\n\t\"./General_Category/Other_Punctuation.js\": 370,\n\t\"./General_Category/Other_Symbol.js\": 371,\n\t\"./General_Category/Paragraph_Separator.js\": 372,\n\t\"./General_Category/Private_Use.js\": 373,\n\t\"./General_Category/Punctuation.js\": 374,\n\t\"./General_Category/Separator.js\": 375,\n\t\"./General_Category/Space_Separator.js\": 376,\n\t\"./General_Category/Spacing_Mark.js\": 377,\n\t\"./General_Category/Surrogate.js\": 378,\n\t\"./General_Category/Symbol.js\": 379,\n\t\"./General_Category/Titlecase_Letter.js\": 380,\n\t\"./General_Category/Unassigned.js\": 381,\n\t\"./General_Category/Uppercase_Letter.js\": 382,\n\t\"./Script/Adlam.js\": 383,\n\t\"./Script/Ahom.js\": 384,\n\t\"./Script/Anatolian_Hieroglyphs.js\": 385,\n\t\"./Script/Arabic.js\": 386,\n\t\"./Script/Armenian.js\": 387,\n\t\"./Script/Avestan.js\": 388,\n\t\"./Script/Balinese.js\": 389,\n\t\"./Script/Bamum.js\": 390,\n\t\"./Script/Bassa_Vah.js\": 391,\n\t\"./Script/Batak.js\": 392,\n\t\"./Script/Bengali.js\": 393,\n\t\"./Script/Bhaiksuki.js\": 394,\n\t\"./Script/Bopomofo.js\": 395,\n\t\"./Script/Brahmi.js\": 396,\n\t\"./Script/Braille.js\": 397,\n\t\"./Script/Buginese.js\": 398,\n\t\"./Script/Buhid.js\": 399,\n\t\"./Script/Canadian_Aboriginal.js\": 400,\n\t\"./Script/Carian.js\": 401,\n\t\"./Script/Caucasian_Albanian.js\": 402,\n\t\"./Script/Chakma.js\": 403,\n\t\"./Script/Cham.js\": 404,\n\t\"./Script/Cherokee.js\": 405,\n\t\"./Script/Common.js\": 406,\n\t\"./Script/Coptic.js\": 407,\n\t\"./Script/Cuneiform.js\": 408,\n\t\"./Script/Cypriot.js\": 409,\n\t\"./Script/Cyrillic.js\": 410,\n\t\"./Script/Deseret.js\": 411,\n\t\"./Script/Devanagari.js\": 412,\n\t\"./Script/Dogra.js\": 413,\n\t\"./Script/Duployan.js\": 414,\n\t\"./Script/Egyptian_Hieroglyphs.js\": 415,\n\t\"./Script/Elbasan.js\": 416,\n\t\"./Script/Elymaic.js\": 417,\n\t\"./Script/Ethiopic.js\": 418,\n\t\"./Script/Georgian.js\": 419,\n\t\"./Script/Glagolitic.js\": 420,\n\t\"./Script/Gothic.js\": 421,\n\t\"./Script/Grantha.js\": 422,\n\t\"./Script/Greek.js\": 423,\n\t\"./Script/Gujarati.js\": 424,\n\t\"./Script/Gunjala_Gondi.js\": 425,\n\t\"./Script/Gurmukhi.js\": 426,\n\t\"./Script/Han.js\": 427,\n\t\"./Script/Hangul.js\": 428,\n\t\"./Script/Hanifi_Rohingya.js\": 429,\n\t\"./Script/Hanunoo.js\": 430,\n\t\"./Script/Hatran.js\": 431,\n\t\"./Script/Hebrew.js\": 432,\n\t\"./Script/Hiragana.js\": 433,\n\t\"./Script/Imperial_Aramaic.js\": 434,\n\t\"./Script/Inherited.js\": 435,\n\t\"./Script/Inscriptional_Pahlavi.js\": 436,\n\t\"./Script/Inscriptional_Parthian.js\": 437,\n\t\"./Script/Javanese.js\": 438,\n\t\"./Script/Kaithi.js\": 439,\n\t\"./Script/Kannada.js\": 440,\n\t\"./Script/Katakana.js\": 441,\n\t\"./Script/Kayah_Li.js\": 442,\n\t\"./Script/Kharoshthi.js\": 443,\n\t\"./Script/Khmer.js\": 444,\n\t\"./Script/Khojki.js\": 445,\n\t\"./Script/Khudawadi.js\": 446,\n\t\"./Script/Lao.js\": 447,\n\t\"./Script/Latin.js\": 448,\n\t\"./Script/Lepcha.js\": 449,\n\t\"./Script/Limbu.js\": 450,\n\t\"./Script/Linear_A.js\": 451,\n\t\"./Script/Linear_B.js\": 452,\n\t\"./Script/Lisu.js\": 453,\n\t\"./Script/Lycian.js\": 454,\n\t\"./Script/Lydian.js\": 455,\n\t\"./Script/Mahajani.js\": 456,\n\t\"./Script/Makasar.js\": 457,\n\t\"./Script/Malayalam.js\": 458,\n\t\"./Script/Mandaic.js\": 459,\n\t\"./Script/Manichaean.js\": 460,\n\t\"./Script/Marchen.js\": 461,\n\t\"./Script/Masaram_Gondi.js\": 462,\n\t\"./Script/Medefaidrin.js\": 463,\n\t\"./Script/Meetei_Mayek.js\": 464,\n\t\"./Script/Mende_Kikakui.js\": 465,\n\t\"./Script/Meroitic_Cursive.js\": 466,\n\t\"./Script/Meroitic_Hieroglyphs.js\": 467,\n\t\"./Script/Miao.js\": 468,\n\t\"./Script/Modi.js\": 469,\n\t\"./Script/Mongolian.js\": 470,\n\t\"./Script/Mro.js\": 471,\n\t\"./Script/Multani.js\": 472,\n\t\"./Script/Myanmar.js\": 473,\n\t\"./Script/Nabataean.js\": 474,\n\t\"./Script/Nandinagari.js\": 475,\n\t\"./Script/New_Tai_Lue.js\": 476,\n\t\"./Script/Newa.js\": 477,\n\t\"./Script/Nko.js\": 478,\n\t\"./Script/Nushu.js\": 479,\n\t\"./Script/Nyiakeng_Puachue_Hmong.js\": 480,\n\t\"./Script/Ogham.js\": 481,\n\t\"./Script/Ol_Chiki.js\": 482,\n\t\"./Script/Old_Hungarian.js\": 483,\n\t\"./Script/Old_Italic.js\": 484,\n\t\"./Script/Old_North_Arabian.js\": 485,\n\t\"./Script/Old_Permic.js\": 486,\n\t\"./Script/Old_Persian.js\": 487,\n\t\"./Script/Old_Sogdian.js\": 488,\n\t\"./Script/Old_South_Arabian.js\": 489,\n\t\"./Script/Old_Turkic.js\": 490,\n\t\"./Script/Oriya.js\": 491,\n\t\"./Script/Osage.js\": 492,\n\t\"./Script/Osmanya.js\": 493,\n\t\"./Script/Pahawh_Hmong.js\": 494,\n\t\"./Script/Palmyrene.js\": 495,\n\t\"./Script/Pau_Cin_Hau.js\": 496,\n\t\"./Script/Phags_Pa.js\": 497,\n\t\"./Script/Phoenician.js\": 498,\n\t\"./Script/Psalter_Pahlavi.js\": 499,\n\t\"./Script/Rejang.js\": 500,\n\t\"./Script/Runic.js\": 501,\n\t\"./Script/Samaritan.js\": 502,\n\t\"./Script/Saurashtra.js\": 503,\n\t\"./Script/Sharada.js\": 504,\n\t\"./Script/Shavian.js\": 505,\n\t\"./Script/Siddham.js\": 506,\n\t\"./Script/SignWriting.js\": 507,\n\t\"./Script/Sinhala.js\": 508,\n\t\"./Script/Sogdian.js\": 509,\n\t\"./Script/Sora_Sompeng.js\": 510,\n\t\"./Script/Soyombo.js\": 511,\n\t\"./Script/Sundanese.js\": 512,\n\t\"./Script/Syloti_Nagri.js\": 513,\n\t\"./Script/Syriac.js\": 514,\n\t\"./Script/Tagalog.js\": 515,\n\t\"./Script/Tagbanwa.js\": 516,\n\t\"./Script/Tai_Le.js\": 517,\n\t\"./Script/Tai_Tham.js\": 518,\n\t\"./Script/Tai_Viet.js\": 519,\n\t\"./Script/Takri.js\": 520,\n\t\"./Script/Tamil.js\": 521,\n\t\"./Script/Tangut.js\": 522,\n\t\"./Script/Telugu.js\": 523,\n\t\"./Script/Thaana.js\": 524,\n\t\"./Script/Thai.js\": 525,\n\t\"./Script/Tibetan.js\": 526,\n\t\"./Script/Tifinagh.js\": 527,\n\t\"./Script/Tirhuta.js\": 528,\n\t\"./Script/Ugaritic.js\": 529,\n\t\"./Script/Vai.js\": 530,\n\t\"./Script/Wancho.js\": 531,\n\t\"./Script/Warang_Citi.js\": 532,\n\t\"./Script/Yi.js\": 533,\n\t\"./Script/Zanabazar_Square.js\": 534,\n\t\"./Script_Extensions/Adlam.js\": 535,\n\t\"./Script_Extensions/Ahom.js\": 536,\n\t\"./Script_Extensions/Anatolian_Hieroglyphs.js\": 537,\n\t\"./Script_Extensions/Arabic.js\": 538,\n\t\"./Script_Extensions/Armenian.js\": 539,\n\t\"./Script_Extensions/Avestan.js\": 540,\n\t\"./Script_Extensions/Balinese.js\": 541,\n\t\"./Script_Extensions/Bamum.js\": 542,\n\t\"./Script_Extensions/Bassa_Vah.js\": 543,\n\t\"./Script_Extensions/Batak.js\": 544,\n\t\"./Script_Extensions/Bengali.js\": 545,\n\t\"./Script_Extensions/Bhaiksuki.js\": 546,\n\t\"./Script_Extensions/Bopomofo.js\": 547,\n\t\"./Script_Extensions/Brahmi.js\": 548,\n\t\"./Script_Extensions/Braille.js\": 549,\n\t\"./Script_Extensions/Buginese.js\": 550,\n\t\"./Script_Extensions/Buhid.js\": 551,\n\t\"./Script_Extensions/Canadian_Aboriginal.js\": 552,\n\t\"./Script_Extensions/Carian.js\": 553,\n\t\"./Script_Extensions/Caucasian_Albanian.js\": 554,\n\t\"./Script_Extensions/Chakma.js\": 555,\n\t\"./Script_Extensions/Cham.js\": 556,\n\t\"./Script_Extensions/Cherokee.js\": 557,\n\t\"./Script_Extensions/Common.js\": 558,\n\t\"./Script_Extensions/Coptic.js\": 559,\n\t\"./Script_Extensions/Cuneiform.js\": 560,\n\t\"./Script_Extensions/Cypriot.js\": 561,\n\t\"./Script_Extensions/Cyrillic.js\": 562,\n\t\"./Script_Extensions/Deseret.js\": 563,\n\t\"./Script_Extensions/Devanagari.js\": 564,\n\t\"./Script_Extensions/Dogra.js\": 565,\n\t\"./Script_Extensions/Duployan.js\": 566,\n\t\"./Script_Extensions/Egyptian_Hieroglyphs.js\": 567,\n\t\"./Script_Extensions/Elbasan.js\": 568,\n\t\"./Script_Extensions/Elymaic.js\": 569,\n\t\"./Script_Extensions/Ethiopic.js\": 570,\n\t\"./Script_Extensions/Georgian.js\": 571,\n\t\"./Script_Extensions/Glagolitic.js\": 572,\n\t\"./Script_Extensions/Gothic.js\": 573,\n\t\"./Script_Extensions/Grantha.js\": 574,\n\t\"./Script_Extensions/Greek.js\": 575,\n\t\"./Script_Extensions/Gujarati.js\": 576,\n\t\"./Script_Extensions/Gunjala_Gondi.js\": 577,\n\t\"./Script_Extensions/Gurmukhi.js\": 578,\n\t\"./Script_Extensions/Han.js\": 579,\n\t\"./Script_Extensions/Hangul.js\": 580,\n\t\"./Script_Extensions/Hanifi_Rohingya.js\": 581,\n\t\"./Script_Extensions/Hanunoo.js\": 582,\n\t\"./Script_Extensions/Hatran.js\": 583,\n\t\"./Script_Extensions/Hebrew.js\": 584,\n\t\"./Script_Extensions/Hiragana.js\": 585,\n\t\"./Script_Extensions/Imperial_Aramaic.js\": 586,\n\t\"./Script_Extensions/Inherited.js\": 587,\n\t\"./Script_Extensions/Inscriptional_Pahlavi.js\": 588,\n\t\"./Script_Extensions/Inscriptional_Parthian.js\": 589,\n\t\"./Script_Extensions/Javanese.js\": 590,\n\t\"./Script_Extensions/Kaithi.js\": 591,\n\t\"./Script_Extensions/Kannada.js\": 592,\n\t\"./Script_Extensions/Katakana.js\": 593,\n\t\"./Script_Extensions/Kayah_Li.js\": 594,\n\t\"./Script_Extensions/Kharoshthi.js\": 595,\n\t\"./Script_Extensions/Khmer.js\": 596,\n\t\"./Script_Extensions/Khojki.js\": 597,\n\t\"./Script_Extensions/Khudawadi.js\": 598,\n\t\"./Script_Extensions/Lao.js\": 599,\n\t\"./Script_Extensions/Latin.js\": 600,\n\t\"./Script_Extensions/Lepcha.js\": 601,\n\t\"./Script_Extensions/Limbu.js\": 602,\n\t\"./Script_Extensions/Linear_A.js\": 603,\n\t\"./Script_Extensions/Linear_B.js\": 604,\n\t\"./Script_Extensions/Lisu.js\": 605,\n\t\"./Script_Extensions/Lycian.js\": 606,\n\t\"./Script_Extensions/Lydian.js\": 607,\n\t\"./Script_Extensions/Mahajani.js\": 608,\n\t\"./Script_Extensions/Makasar.js\": 609,\n\t\"./Script_Extensions/Malayalam.js\": 610,\n\t\"./Script_Extensions/Mandaic.js\": 611,\n\t\"./Script_Extensions/Manichaean.js\": 612,\n\t\"./Script_Extensions/Marchen.js\": 613,\n\t\"./Script_Extensions/Masaram_Gondi.js\": 614,\n\t\"./Script_Extensions/Medefaidrin.js\": 615,\n\t\"./Script_Extensions/Meetei_Mayek.js\": 616,\n\t\"./Script_Extensions/Mende_Kikakui.js\": 617,\n\t\"./Script_Extensions/Meroitic_Cursive.js\": 618,\n\t\"./Script_Extensions/Meroitic_Hieroglyphs.js\": 619,\n\t\"./Script_Extensions/Miao.js\": 620,\n\t\"./Script_Extensions/Modi.js\": 621,\n\t\"./Script_Extensions/Mongolian.js\": 622,\n\t\"./Script_Extensions/Mro.js\": 623,\n\t\"./Script_Extensions/Multani.js\": 624,\n\t\"./Script_Extensions/Myanmar.js\": 625,\n\t\"./Script_Extensions/Nabataean.js\": 626,\n\t\"./Script_Extensions/Nandinagari.js\": 627,\n\t\"./Script_Extensions/New_Tai_Lue.js\": 628,\n\t\"./Script_Extensions/Newa.js\": 629,\n\t\"./Script_Extensions/Nko.js\": 630,\n\t\"./Script_Extensions/Nushu.js\": 631,\n\t\"./Script_Extensions/Nyiakeng_Puachue_Hmong.js\": 632,\n\t\"./Script_Extensions/Ogham.js\": 633,\n\t\"./Script_Extensions/Ol_Chiki.js\": 634,\n\t\"./Script_Extensions/Old_Hungarian.js\": 635,\n\t\"./Script_Extensions/Old_Italic.js\": 636,\n\t\"./Script_Extensions/Old_North_Arabian.js\": 637,\n\t\"./Script_Extensions/Old_Permic.js\": 638,\n\t\"./Script_Extensions/Old_Persian.js\": 639,\n\t\"./Script_Extensions/Old_Sogdian.js\": 640,\n\t\"./Script_Extensions/Old_South_Arabian.js\": 641,\n\t\"./Script_Extensions/Old_Turkic.js\": 642,\n\t\"./Script_Extensions/Oriya.js\": 643,\n\t\"./Script_Extensions/Osage.js\": 644,\n\t\"./Script_Extensions/Osmanya.js\": 645,\n\t\"./Script_Extensions/Pahawh_Hmong.js\": 646,\n\t\"./Script_Extensions/Palmyrene.js\": 647,\n\t\"./Script_Extensions/Pau_Cin_Hau.js\": 648,\n\t\"./Script_Extensions/Phags_Pa.js\": 649,\n\t\"./Script_Extensions/Phoenician.js\": 650,\n\t\"./Script_Extensions/Psalter_Pahlavi.js\": 651,\n\t\"./Script_Extensions/Rejang.js\": 652,\n\t\"./Script_Extensions/Runic.js\": 653,\n\t\"./Script_Extensions/Samaritan.js\": 654,\n\t\"./Script_Extensions/Saurashtra.js\": 655,\n\t\"./Script_Extensions/Sharada.js\": 656,\n\t\"./Script_Extensions/Shavian.js\": 657,\n\t\"./Script_Extensions/Siddham.js\": 658,\n\t\"./Script_Extensions/SignWriting.js\": 659,\n\t\"./Script_Extensions/Sinhala.js\": 660,\n\t\"./Script_Extensions/Sogdian.js\": 661,\n\t\"./Script_Extensions/Sora_Sompeng.js\": 662,\n\t\"./Script_Extensions/Soyombo.js\": 663,\n\t\"./Script_Extensions/Sundanese.js\": 664,\n\t\"./Script_Extensions/Syloti_Nagri.js\": 665,\n\t\"./Script_Extensions/Syriac.js\": 666,\n\t\"./Script_Extensions/Tagalog.js\": 667,\n\t\"./Script_Extensions/Tagbanwa.js\": 668,\n\t\"./Script_Extensions/Tai_Le.js\": 669,\n\t\"./Script_Extensions/Tai_Tham.js\": 670,\n\t\"./Script_Extensions/Tai_Viet.js\": 671,\n\t\"./Script_Extensions/Takri.js\": 672,\n\t\"./Script_Extensions/Tamil.js\": 673,\n\t\"./Script_Extensions/Tangut.js\": 674,\n\t\"./Script_Extensions/Telugu.js\": 675,\n\t\"./Script_Extensions/Thaana.js\": 676,\n\t\"./Script_Extensions/Thai.js\": 677,\n\t\"./Script_Extensions/Tibetan.js\": 678,\n\t\"./Script_Extensions/Tifinagh.js\": 679,\n\t\"./Script_Extensions/Tirhuta.js\": 680,\n\t\"./Script_Extensions/Ugaritic.js\": 681,\n\t\"./Script_Extensions/Vai.js\": 682,\n\t\"./Script_Extensions/Wancho.js\": 683,\n\t\"./Script_Extensions/Warang_Citi.js\": 684,\n\t\"./Script_Extensions/Yi.js\": 685,\n\t\"./Script_Extensions/Zanabazar_Square.js\": 686,\n\t\"./index.js\": 687,\n\t\"./unicode-version.js\": 688\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 291;","import Grid from \"@material-ui/core/Grid\";\nimport React from 'react';\nimport {push as Menu, State} from \"react-burger-menu\";\nimport './SliderMenu.css';\nimport Button from \"@material-ui/core/Button\";\nimport Divider from '@material-ui/core/Divider';\nimport {QuestionIface} from \"../Form/Question\";\nimport {withRouter} from 'react-router-dom';\nimport {RouteComponentProps} from \"react-router\";\n\ntype MyProps = RouteComponentProps & {\n    open: boolean,\n    question: number,\n    questions: QuestionIface[],\n    userID: string\n    onUserIDChange: (userID: string) => void,\n    handleMenu: (arg0: boolean) => void,\n    handleClickQuestion: (arg0: number) => void,\n    handleMenuStateChange: (arg0: State) => void,\n    handleSaveState: () => void,\n    handleLoadState: (arg0: boolean) => void,\n    handleStart: () => void,\n    toggleAdmin: () => void,\n};\n\nclass SliderMenu extends React.Component<MyProps, {}> {\n\n    handleResume = () => {\n        this.props.history.push('/load');\n        this.props.handleMenu(false);\n    };\n\n    render() {\n\n        return (\n            <Menu pageWrapId={\"page-wrap\"} outerContainerId={\"root\"}\n                  isOpen={this.props.open}\n                  onStateChange={(state) => this.props.handleMenuStateChange(state)}\n                  className='menu-width'\n            >\n                {this.props.question > 0 && this.props.question < this.props.questions.length ?\n                    <Grid container spacing={2} className='h-100'>\n                        <Grid item xs={12}>\n                            <span style={{color: 'white'}}>\n                                Are you feeling lost? Need some help? Here are some resources to help you learn.\n                            </span>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <span style={{color: 'white'}}>\n                                <a href='https://www.w3schools.com/js/' target='_blank' rel=\"noopener noreferrer\">01. W3 Schools</a>\n                            </span>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <span style={{color: 'white'}}>\n                                <a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript' target='_blank'\n                                   rel=\"noopener noreferrer\">02. MDN Web Documents</a>\n                            </span>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <span style={{color: 'white'}}>Check this video out for a quick introduction</span>\n                            <iframe width=\"100%\" height=\"auto\" src=\"https://www.youtube.com/embed/W6NZfCO5SIk\"\n                                    frameBorder=\"0\"\n                                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                                    allowFullScreen/>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Divider variant='middle' style={{backgroundColor: '#fff'}}/>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <span style={{color: 'white'}}>\n                                Want to continue some other time? Simply key in a unique key and save!\n                            </span>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <label className=\"field a-field a-field_a3\">\n                                <input className=\"field__input a-field__input\" value={this.props.userID}\n                                       onChange={(e) => {\n                                           this.props.onUserIDChange(e.target.value);\n                                       }}\n                                />\n                                <span className=\"a-field__label-wrap\">\n                                    <span className=\"a-field__label\">Enter User ID</span>\n                                </span>\n                            </label>\n                            <div className='d-flex'>\n                                <Button variant=\"outlined\" className='button-start' size='large'\n                                        onClick={this.props.handleSaveState}>\n                                    SAVE\n                                </Button>\n                                <Button variant=\"outlined\" className='button-start ml-auto' size='large'\n                                        onClick={() => this.props.handleLoadState(true)}>\n                                    LOAD\n                                </Button>\n                            </div>\n                        </Grid>\n                    </Grid> :\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} className='d-flex align-items-center justify-content-center'>\n                            <Button variant=\"outlined\" className='button-start' size='large'\n                                    onClick={this.props.handleStart}>\n                                START\n                            </Button>\n                        </Grid>\n                        <Grid item xs={12} className='d-flex align-items-center justify-content-center'>\n\n                            <Button variant=\"outlined\" className='button-start'\n                                    onClick={this.handleResume}>\n                                RESUME\n                            </Button>\n\n                        </Grid>\n                        <Grid item xs={12} className='d-flex align-items-center justify-content-center'>\n                            <Button variant=\"outlined\" className='button-start'\n                                    onClick={this.props.toggleAdmin}>\n                                ADMIN MODE</Button>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Divider variant='middle' style={{backgroundColor: '#fff'}}/>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <span style={{color: 'white'}}>\n                                From Python to JS is a quick and easy online module will teach you JavaScript, the popular programming language used for the Web.\n                                </span>\n                        </Grid>\n                    </Grid>\n                }\n            </Menu>\n        )\n\n    }\n}\n\nexport default withRouter(SliderMenu);\n","import * as firebase from 'firebase';\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nvar firebaseConfig = require('./firebaseConfig.json');\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);","import React from 'react';\nimport { Col, Row, Alert } from \"react-bootstrap\";\nimport { QuestionIface } from \"./Question\";\nimport { firebaseApp } from \"../../util/firebase\";\n\ntype MyProps = {\n    question: number,\n    alertData: {\n        correctAnswer: number,\n        totalTries: number,\n        wrongAnswer: number\n    }[],\n    questions: QuestionIface[],\n    handleAlertClose: () => void,\n};\n\nfunction getRandomInt(max: number) {\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\nclass CustomAlert extends React.Component<MyProps, {}> {\n\n    state = {\n        errorAlert: [\"Please try again! You can use the hints if you need more help.\"],\n        successAlert: [\"You answered the question correctly! Please move on to the next question.\"],\n    };\n\n    renderText = (pass: boolean) => {\n        if (pass) {\n            let successAlert = this.state.successAlert;\n            successAlert.push(`Congratulations, you are part of the ${Math.floor(this.props.alertData[this.props.question].correctAnswer)} people who got the question correct!`);\n            return successAlert[getRandomInt(successAlert.length)];\n        } else {\n            let errorAlert = this.state.errorAlert;\n            const percentage = Math.floor((this.props.alertData[this.props.question].correctAnswer / this.props.alertData[this.props.question].totalTries) * 100);\n            errorAlert.push(`Don't be disheartened this is one of our more difficult questions, only ${percentage}% got the question correct!`);\n            return errorAlert[getRandomInt(errorAlert.length)];\n        }\n    };\n\n    render() {\n        return (\n            <Row className='d-flex align-items-center justify-content-center' style={{ marginBottom: 10 }}>\n                <Col xs={10}>\n                    <Alert\n                        variant={this.props.questions[this.props.question].completed ? \"success\" : \"danger\"}\n                        onClose={this.props.handleAlertClose}\n                        dismissible>\n                        {this.renderText(this.props.questions[this.props.question].completed)}\n                    </Alert>\n                </Col>\n            </Row>\n        )\n    }\n}\n\nexport default CustomAlert;\n","import React from 'react';\nimport './Question.css';\nimport AceEditor from \"react-ace\";\nimport 'brace/mode/javascript';\nimport 'brace/theme/monokai';\nimport Button from \"@material-ui/core/Button\";\nimport {Container, Col, Row, OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport HelpIcon from '@material-ui/icons/HelpOutline';\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport SwipeableViews from 'react-swipeable-views';\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n    LiveProvider,\n    LiveEditor,\n    LiveError,\n    LivePreview\n} from 'react-live';\n\n\nexport interface QuestionIface {\n    questionTitle: string,\n    questionTutorial: string,\n    questionText: string | string[],\n    hint: string,\n    answer: string | number | number[],\n    defaultAnswer: string | number | number[],\n    feedbackText: string,\n    completed: boolean,\n    type: QuestionType,\n    testCode: string,\n    exportCode: string,\n    pastAnswers: pastAnswerIface[],\n    startDateTime: any,\n    completedDateTime: any,\n\n}\n\nexport interface pastAnswerIface {\n    pass: boolean,\n    pastAnswer: string | number | number[],\n    errorMessage: string,\n}\n\nexport enum QuestionType {\n    EditableCode, // qn with editable code that can run\n    MultipleChoice, // mcq\n    Checkboxes, // select all that applies\n    HTMLCode\n}\n\nfunction TabPanel(props: any) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <div\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            style={{maxWidth: '100%', height: '100%'}}\n            {...other}\n        >\n            {children}\n        </div>\n    );\n}\n\ntype MyProps = {\n    lastQuestion: boolean,\n    isLoading: boolean,\n    index: number,\n    question: QuestionIface,\n    nextQuestion: () => void,\n    prevQuestion: () => void,\n    checkAnswer: () => void,\n    resetAnswer: () => void,\n    toggleComplete: (arg0: boolean) => void,\n};\n\nclass Question extends React.Component<MyProps, { selected: Set<number>, view: number }> {\n    constructor(props: MyProps) {\n        super(props);\n        this.state = {\n            selected: new Set(),\n            view: 0,\n        };\n    }\n\n    handleAnswerChange = (newValue: string) => {\n        this.props.question.answer = newValue;\n    };\n\n    checkAns = () => {\n        let ans;\n        if (this.props.question.type === QuestionType.Checkboxes) {\n            ans = new Set(this.props.question.answer as number[])\n        } else {\n            ans = new Set([this.props.question.answer as number]);\n        }\n        this.props.toggleComplete(eqSet(ans, this.state.selected));\n    };\n\n    handleClickQuestionView = (e: any, i: number) => {\n        this.setState({\n            view: i,\n        });\n    };\n\n    handleCheckboxAnsChange = (event: any, i: number) => {\n        let selected = this.state.selected;\n        if (event.target.checked) {\n            selected.add(i);\n        } else {\n            selected.delete(i);\n        }\n        this.setState({selected: selected});\n    };\n\n    renderQuestion = () => {\n        switch (this.props.question.type) {\n            case QuestionType.EditableCode:\n                return this.renderEditableCode();\n            case QuestionType.MultipleChoice:\n                return this.renderMCQ();\n            case QuestionType.Checkboxes:\n                return this.renderCheckboxes();\n            case QuestionType.HTMLCode:\n                return this.renderHtmlCode();\n            default:\n                break;\n        }\n    };\n\n    renderCheckboxes = () => {\n        const qn = this.props.question.questionText as string[];\n        let options = [];\n        for (let i = 1; i < qn.length; i++) {\n            options.push(\n                <label key={i}>\n                    {qn[i]}\n                    <input type='checkbox' onChange={(e) => this.handleCheckboxAnsChange(e, i)}/>\n                    <br/>\n                </label>\n            )\n        }\n        return (\n            <Row className='w-100'>\n                <div><p className='question-instruction'><strong>{qn[0]}</strong></p></div>\n                <div>{options}</div>\n                <Button className='button-start' onClick={this.checkAns}> Check answer </Button>\n            </Row>\n        )\n    };\n\n    renderMCQ = () => {\n        const qn = this.props.question.questionText as string[];\n        let selection = [];\n        for (let i = 1; i < qn.length; i++) {\n            const text = qn[i];\n            let className = \"mcq-button\"\n            if (this.state.selected.has(i)) {\n                className += \" selected-mcq\"\n            }\n            selection.push(\n                <pre onClick={() => this.setState({selected: new Set([i])})} key={i}\n                     className={className}><code className='mcq-button-font'>{text}</code></pre>\n            );\n        }\n        return (\n            <Row className='w-100' style={{height: '50vh'}}>\n                <Col xs={6}>\n                    <div className='d-flex align-items-center ' style={{marginBottom: 10}}>\n                        <p className='question-instruction'><strong>{this.props.question.questionTutorial}</strong></p>\n                        <div>\n                            <OverlayTrigger\n                                key='bottom'\n                                placement='bottom'\n                                overlay={\n                                    <Tooltip id='hint'>\n                                        {this.props.question.hint}\n                                    </Tooltip>\n                                }\n                            >\n                                <HelpIcon/>\n                            </OverlayTrigger>\n                        </div>\n                    </div>\n                    <AceEditor\n                        wrapEnabled\n                        height='90%'\n                        width='100%'\n                        mode=\"javascript\"\n                        theme=\"monokai\"\n                        name=\"answerInput\"\n                        readOnly={true}\n                        tabSize={4}\n                        editorProps={{\n                            $blockScrolling: true,\n                        }}\n                        value={qn[0] as string}\n                    />\n                </Col>\n                <Col className='mh-100'>\n                    {selection}\n                </Col>\n            </Row>\n        );\n    };\n\n    renderEditableCode = () => {\n        return (\n            <Row className='w-100' style={{height: '50vh'}}>\n                <Col xs={6} style={{height: '100%'}} className='question-container'>\n                    <Tabs\n                        value={this.state.view}\n                        onChange={this.handleClickQuestionView}\n                        textColor=\"primary\"\n                        variant='fullWidth'\n                        centered\n                        TabIndicatorProps={\n                            {\n                                className: 'active-tab',\n                            }\n                        }\n                    >\n                        <Tab label=\"Instructions\" value={0}/>\n                        <Tab label=\"Output\" value={1}/>\n                    </Tabs>\n                    <SwipeableViews\n                        index={this.state.view}\n                        onChangeIndex={this.handleClickQuestionView}\n                        className='w-100 h-100'\n                    >\n                        <TabPanel value={this.state.view} index={0}>\n                            <p>{this.props.question.questionTutorial}</p>\n                        </TabPanel>\n                        <TabPanel value={this.state.view} index={1}>\n                            <Paper>\n                                <div\n                                    dangerouslySetInnerHTML={{__html: this.props.question.feedbackText}}/>\n                            </Paper>\n                        </TabPanel>\n\n                    </SwipeableViews>\n                </Col>\n                <Col xs={6} style={{height: '100%'}}>\n                    <div className='d-flex align-items-center ' style={{marginBottom: 10}}>\n                        <p className='question-instruction'><strong>{this.props.question.questionText}</strong></p>\n                        <div>\n                            <OverlayTrigger\n                                key='bottom'\n                                placement='bottom'\n                                overlay={\n                                    <Tooltip id='hint'>\n                                        {this.props.question.hint}\n                                    </Tooltip>\n                                }\n                            >\n                                <HelpIcon/>\n                            </OverlayTrigger>\n                        </div>\n                    </div>\n                    <AceEditor\n                        wrapEnabled\n                        height='90%'\n                        width='100%'\n                        mode=\"javascript\"\n                        theme=\"monokai\"\n                        name=\"answerInput\"\n                        onChange={this.handleAnswerChange}\n                        tabSize={4}\n                        editorProps={{\n                            $blockScrolling: true,\n                        }}\n                        value={this.props.question.answer as string}\n                    />\n                </Col>\n                {/*<div dangerouslySetInnerHTML={{ __html: this.props.question.feedbackText }} />*/}\n            </Row>\n        );\n    };\n\n    renderHtmlCode = () => {\n        return (\n            <LiveProvider code={this.props.question.defaultAnswer as string}>\n                <Row className='w-100' style={{height: '50vh'}}>\n                    <Col xs={6} className='question-container w-100 mh-100'>\n                        <Tabs\n                            value={this.state.view}\n                            onChange={this.handleClickQuestionView}\n                            textColor=\"primary\"\n                            variant='fullWidth'\n                            centered\n                            TabIndicatorProps={\n                                {\n                                    className: 'active-tab',\n                                }\n                            }\n                        >\n                            <Tab label=\"Instructions\" value={0}/>\n                            <Tab label=\"Edit Code\" value={1}/>\n                        </Tabs>\n                        <SwipeableViews\n                            index={this.state.view}\n                            onChangeIndex={this.handleClickQuestionView}\n                            className='w-100 h-100'\n                        >\n                            <TabPanel value={this.state.view} index={0}>\n                                <div style={{lineHeight: 1}}>\n                                    <p>{this.props.question.questionTutorial}</p>\n                                </div>\n                            </TabPanel>\n                            <TabPanel value={this.state.view} index={1}>\n                                <LiveEditor/>\n                            </TabPanel>\n                        </SwipeableViews>\n                    </Col>\n                    <Col xs={6}>\n                        <div className='d-flex align-items-center ' style={{marginBottom: 10}}>\n                            <p className='question-instruction'><strong>{this.props.question.questionTutorial}</strong>\n                            </p>\n                            <OverlayTrigger\n                                key='bottom'\n                                placement='bottom'\n                                overlay={\n                                    <Tooltip id='hint'>\n                                        {this.props.question.hint}\n                                    </Tooltip>\n                                }\n                            >\n                                <HelpIcon/>\n                            </OverlayTrigger>\n                        </div>\n                        <Paper style={{height: '80%'}}>\n                            <LiveError/>\n                            <LivePreview/>\n                        </Paper>\n                    </Col>\n                </Row>\n            </LiveProvider>\n        );\n    };\n\n    render() {\n        const q = this.props.question;\n        return (\n            <Container className='d-flex align-items-center justify-content-center flex-column'>\n                {this.renderQuestion()}\n                <Row className='d-flex w-100'>\n\n                    <Button variant=\"outlined\" className='button-start' size='large'\n                            onClick={this.props.prevQuestion}>\n                        PREVIOUS\n                    </Button>\n                    <Button variant=\"outlined\" className='button-start' size='large'\n                            onClick={this.props.resetAnswer}\n                            style={{marginLeft: 10}}\n                    >\n                        RESET\n                    </Button>\n                    {this.props.isLoading ?\n                        <CircularProgress className='loading-color ml-auto'/>\n                        : <div className='ml-auto' >\n                            {q.type !== QuestionType.MultipleChoice ?\n                                <Button variant=\"outlined\" className='button-start' size='large'\n                                        onClick={this.props.checkAnswer}>\n                                    RUN\n                                </Button> :\n                                <Button variant='outlined' className='button-start' size='large'\n                                        onClick={this.checkAns}> CHECK\n                                    ANSWER</Button>}\n                        </div>}\n                    <Button variant=\"outlined\" className='button-start' size='large'\n                            onClick={this.props.nextQuestion} style={{marginLeft: 10}}\n                            disabled={!q.completed}\n                    >\n                        {this.props.lastQuestion ? \"FINISH\" : 'NEXT'}\n                    </Button>\n                </Row>\n            </Container>\n        );\n    }\n}\n\n// determines if 2 sets are equal. https://stackoverflow.com/a/31129384\nfunction eqSet(as: Set<any>, bs: Set<any>) {\n    if (as.size !== bs.size) return false;\n    for (var a of as) if (!bs.has(a)) return false;\n    return true;\n}\n\nexport default Question;\n\n","import React from 'react';\nimport { QuestionIface } from \"../Form/Question\";\nimport AceEditor from \"react-ace\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport 'brace/mode/javascript';\nimport 'brace/theme/monokai';\nimport Paper from \"@material-ui/core/Paper\";\nimport { Row, Col, Container } from \"react-bootstrap\";\n\ntype MyProps = {\n    questions: QuestionIface[],\n    question: number,\n};\n\nclass PastAnswers extends React.Component<MyProps, {}> {\n\n    state = {\n        showAnswer: 0,\n    };\n\n    handlePastAnswerSelect = (e: any) => {\n        this.setState({ showAnswer: e.target.value })\n    };\n\n    render() {\n        const questions = this.props.questions;\n        const currQ = this.props.question;\n\n        if (!questions[currQ].pastAnswers || questions[currQ].pastAnswers.length === 0) {\n            return (\n                <h6 className=\"text-center\">You have not submitted any answer yet.</h6>\n            )\n        }\n\n        return (\n            <Container fluid>\n                <Row style={{ position: \"absolute\", top: '-40px' }}>\n                    <Paper>\n                        <FormControl>\n                            <Select value={this.state.showAnswer} onChange={this.handlePastAnswerSelect}>\n                                {questions[currQ].pastAnswers.map((ans, index) => {\n                                    return (\n                                        <MenuItem value={index}>{index + 1}. Attempt {index + 1}</MenuItem>\n                                    );\n                                })}\n                            </Select>\n                        </FormControl>\n                    </Paper>\n                </Row>\n                <Row style={{ height: '50vh' }}>\n                    <Col xs={6} style={{ height: '100%' }}>\n                        <AceEditor\n                            readOnly={true}\n                            wrapEnabled\n                            height='50vh'\n                            width='100%'\n                            mode=\"javascript\"\n                            theme=\"monokai\"\n                            name=\"info-section\"\n                            tabSize={0}\n                            editorProps={{\n                                $blockScrolling: true,\n                            }}\n                            value={questions[currQ].pastAnswers[this.state.showAnswer].pastAnswer as string}\n                            style={{ maxWidth: 570 }}\n                        />\n                    </Col>\n                    <Col xs={6} style={{ height: '100%' }}>\n                        <Paper style={{ height: \"100%\", overflow: \"scroll\" }}>\n                            <div\n                                dangerouslySetInnerHTML={{ __html: questions[currQ].pastAnswers[this.state.showAnswer].errorMessage }} />\n                        </Paper>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default PastAnswers;\n\n","import React, {Component} from 'react';\nimport Typist from 'react-typist';\nimport 'react-typist/dist/Typist.css';\nimport {Container, Col, Row} from 'react-bootstrap';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport CustomAlert from '../Form/Alert';\n\nimport {QuestionIface} from \"../Form/Question\";\nimport Question from \"../Form/Question\";\nimport PastAnswers from \"../PastAnswers/PastAnswers\";\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport AceEditor from 'react-ace';\nimport Rating from '@material-ui/lab/Rating';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport {RouteComponentProps} from \"react-router\";\n\nimport 'brace/mode/javascript';\nimport 'brace/theme/monokai';\n\nimport './QuestionInterface.css'\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport {withRouter} from \"react-router\";\nimport {firebaseApp} from \"../../util/firebase\";\n\n\ntype MyProps = RouteComponentProps & {\n    question: number,\n    showAlert: boolean,\n    isLoading: boolean,\n    loggedIn: boolean,\n\n    // for feed\n    feedbackRating: number,\n    onFeedbackRatingChange: (feedbackRating: number) => void,\n    questions: QuestionIface[],\n    handleStart: () => void,\n    handleStartOver: () => void,\n    handleNextQuestion: () => void,\n    handlePrevQuestion: () => void,\n    handleCheckAnswer: () => void,\n    handleResetAnswer: () => void,\n    toggleComplete: (arg0: boolean) => void,\n    handleClickQuestion: (arg0: number) => void,\n    handleAlertClose: () => void,\n    saveState: () => void,\n};\n\nclass QuestionInterface extends Component<MyProps, {}> {\n    state = {\n        showPastAnswers: false,\n        alertData:[],\n    };\n\n    componentDidMount(): void {\n        let db = firebaseApp.database().ref(`/logging`);\n        db.on('value', ((snapshot) => {\n            let data = snapshot.val();\n\n            if (data !== null) {\n                this.setState({ alertData: data })\n            }\n        }))\n    }\n\n    componentWillUnmount(): void {\n        firebaseApp.database().ref(`/logging/${this.props.question}`).off();\n    }\n\n    handlePastAnswerSwitch = (e: any) => {\n        this.setState({showPastAnswers: e.target.checked})\n    };\n\n    handleCloseHistory = () => {\n        this.setState({showPastAnswers: false})\n    };\n\n    handleResume = () => {\n        this.props.history.push('/load');\n    };\n\n    handleAbout = () => {\n        this.props.history.push('/about');\n    };\n\n    renderQuestion = () => {\n        const questions = this.props.questions;\n        const currQ = this.props.question;\n        switch (currQ) {\n            case 0:\n                return (\n                    <div className='d-flex align-items-center justify-content-center flex-column'>\n                        <Typist className='title-font'>\n                            Learn how to script in JavaScript from Python!\n                        </Typist>\n                        <div className='d-flex align-items-center justify-content-center flex-column'\n                             style={{marginTop: '25px'}}>\n                            <AceEditor\n                                readOnly={false}\n                                wrapEnabled\n                                height='50vh'\n                                width='70vw'\n                                fontSize={16}\n                                showPrintMargin={false}\n                                mode=\"javascript\"\n                                theme=\"monokai\"\n                                name=\"info-section\"\n                                tabSize={0}\n                                editorProps={{\n                                    $blockScrolling: true,\n                                }}\n                                value={questions[currQ].questionText as string}\n                            />\n                        </div>\n                        <div className='d-flex align-items-center' style={{width:'80%'}}>\n                            <Button variant=\"outlined\" className='button-start' size='large'\n                                    onClick={this.handleResume}>\n                                RESUME\n                            </Button>\n                            <Button variant=\"outlined\" className='button-start' size='large' style={{marginLeft:10}}\n                                    onClick={this.handleAbout}>\n                                ABOUT US\n                            </Button>\n                            <Button variant=\"outlined\" className='button-start ml-auto' size='large'\n                                    onClick={this.props.handleStart}>\n                                START\n                            </Button>\n                        </div>\n                    </div>\n                );\n            case questions.length:\n                return (\n                    <div className='d-flex flex-column align-items-center justify-content-center'>\n                        <Typist className='title-font'>\n                            Congratulations on finishing the course\n                        </Typist>\n                        <p style={{marginBottom: 0}}>Please leave us a rating below</p>\n                        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n                            <Rating\n                                name=\"simple-controlled\"\n                                value={this.props.feedbackRating}\n                                onChange={(event, newValue) => {\n                                    this.props.onFeedbackRatingChange(newValue);\n                                    // save rating to firebase\n                                    window.setTimeout(()=>{\n                                        if (this.props.loggedIn){\n                                            this.props.saveState();\n                                        }\n                                    },1000)\n\n                                }}\n                                size=\"large\"\n                                emptyIcon={<StarBorderIcon fontSize=\"inherit\" style={{color: \"white\"}}/>}\n                            />\n                        </Box>\n                        <p>And also help us to complete a feedback form <a\n                            href='https://docs.google.com/forms/d/e/1FAIpQLSfM35tbCqA1qp8Z95il-rWhtXZdLI_3orBRK8onNHISGxbYNQ/viewform?usp=sf_link'\n                            className='feedback-link'>here</a>.</p>\n                        <Button variant=\"outlined\" className='button-start' size='large'\n                                onClick={this.props.handleStartOver}>\n                            START OVER\n                        </Button>\n                    </div>\n                );\n            default:\n                return (\n                    <Question question={questions[currQ]}\n                              index={currQ}\n                              nextQuestion={this.props.handleNextQuestion}\n                              prevQuestion={this.props.handlePrevQuestion}\n                              checkAnswer={this.props.handleCheckAnswer}\n                              resetAnswer={this.props.handleResetAnswer}\n                              lastQuestion={currQ === questions.length - 1}\n                              toggleComplete={this.props.toggleComplete}\n                              isLoading={this.props.isLoading}/>\n\n                );\n\n        }\n    };\n\n    renderPastAnswers = () => {\n        return <PastAnswers questions={this.props.questions}\n                            question={this.props.question}/>\n    };\n\n    renderContent = () => {\n        if (!this.state.showPastAnswers) {\n            return this.renderQuestion()\n        } else {\n            return this.renderPastAnswers();\n        }\n    };\n\n    render() {\n        const questions = this.props.questions;\n        const currQ = this.props.question;\n        const listQuestions = this.props.questions.map((question, index) => {\n            if (index === 0) {\n                return null;\n            }\n            let className = 'question-circle';\n            if (question.completed) {\n                className += ' completed';\n            }\n            if (index === currQ) {\n                className += ' current'\n            }\n            return (\n                <Tab key={index}\n                     className={`d-flex align-items-center`}\n                     label={\n                         <div className='d-flex align-items-center'>\n                             <div className={className}>{index}</div>\n                         </div>\n                     }\n                />);\n        });\n\n        return (\n            <Container fluid>\n                {this.props.showAlert ?\n                    <CustomAlert handleAlertClose={this.props.handleAlertClose}\n                                 question={this.props.question}\n                                 questions={this.props.questions}\n                                 alertData={this.state.alertData}\n                    /> : ''\n                }\n                {currQ > 0 && currQ < questions.length ?\n                    <Row className='d-flex align-items-center justify-content-center'>\n                        <Tabs\n                            value={currQ - 1}\n                            onChange={(e, v) => {\n                                if (questions[v + 1].completed) {\n                                    this.handleCloseHistory();\n                                    this.props.handleClickQuestion(v + 1)\n                                }\n                            }}\n                            textColor=\"primary\"\n                            variant='fullWidth'\n                            centered\n                            TabIndicatorProps={\n                                {\n                                    className: 'active-tab',\n                                    style: {display: \"none\"}\n                                }\n                            }\n                        >\n                            {listQuestions}\n                        </Tabs>\n                    </Row> : ''}\n                {currQ > 0 && currQ < questions.length ?\n                    <Row className='d-flex align-items-center justify-content-center'>\n                        <h2>{this.props.questions[currQ].questionTitle}</h2>\n                        <FormGroup row style={{position: \"absolute\", right: \"10%\"}}>\n                            <FormControlLabel\n                                color=\"primary\"\n                                control={\n                                    <Switch checked={this.state.showPastAnswers}\n                                            onChange={this.handlePastAnswerSwitch}\n                                            value=\"showPastAnswers\"/>\n                                }\n                                label=\"Show Past Answers\"\n                                labelPlacement=\"start\"\n                            />\n                        </FormGroup>\n                    </Row>\n                    : ''\n                }\n                <Row className='d-flex align-items-center justify-content-center'>\n                    <Col>\n                        {this.renderContent()}\n                    </Col>\n                </Row>\n            </Container>\n\n        );\n    }\n}\n\nexport default withRouter(QuestionInterface);\n","import { QuestionIface, QuestionType } from \"./components/Form/Question\";\n\nexport const questions: QuestionIface[] =\n    [\n        {\n            questionTitle: \"\",\n            questionTutorial: \"\",\n            questionText: \"/*\\n Welcome to From Python to JS. \\n\\n This quick and easy online module will teach you JavaScript, the popular programming language used for the Web. \\n\\n JavaScript is a scripting or programming language that allows you to implement complex things on web pages — every time a web page does more than just sit there and display static information for you to look at — displaying timely content updates, interactive maps, animated 2D/3D graphics, scrolling video jukeboxes, etc. — you can bet that JavaScript is probably involved. It is the third layer of the layer cake of standard web technologies, along with HTML and CSS .\\n*/\",\n            answer: \"\",\n            defaultAnswer: \"\",\n            hint: \"\",\n            feedbackText: \"\",\n            completed: false,\n            type: QuestionType.EditableCode,\n            testCode: ``,\n            exportCode: '',\n            pastAnswers: [],\n            startDateTime: null,\n            completedDateTime: null,\n        },\n        {\n            questionTitle: \"Comments\",\n            questionTutorial: \"In JavaScipt, commenting can be done by using: \\n // For single line code \\n /* For multiline code */\",\n            questionText: \"Please convert the following to JavaScript syntax!\",\n            hint: \"Replace # with // and ''' with /*\",\n            answer: \"# a one line comment\\n\" +\n                \"\\n\" +\n                \"'''\\n\" +\n                \"this is a longer,\\n\" +\n                \"multi-line comment\\n\" +\n                \"'''\",\n            defaultAnswer: \"# a one line comment\\n\" +\n                \"\\n\" +\n                \"'''\\n\" +\n                \"this is a longer,\\n\" +\n                \"multi-line comment\\n\" +\n                \"'''\",\n            feedbackText: \"\",\n            completed: false,\n            type: QuestionType.EditableCode,\n            testCode: `\nconst app = require(\"./main\");\ntest(\"default\", () => {\n    expect(1).toBe(1);\n});`,\n            exportCode: '',\n            pastAnswers: [],\n            startDateTime: null,\n            completedDateTime: null,\n        },\n        {\n            questionTitle: \"Declarations\",\n            questionTutorial: \"In JavaScipt, there are two kinds of variable declarations in JS.\\n\" +\n                \"let: Declares a block-scoped, local variable, optionally initializing it to a value\\n\" +\n                \"const: Declares a block-scoped, read-only named constant.\\n\",\n            questionText: \"Please convert the following to JavaScript syntax!\",\n            hint: \"Declare your variables with const when needed\",\n            answer: `y = 13\nx = \"forty-two\"\nz = \"The answer is \" + 42\ncoffees = ['French Roast', 'Colombian', 'Kona']\n`,\n            defaultAnswer: `x = 42\ny = 13\nx = \"forty-two\"\nz = \"The answer is \" + 42\ncoffees = ['French Roast', 'Colombian', 'Kona']\n`,\n            feedbackText: \"\",\n            completed: false,\n            type: QuestionType.EditableCode,\n            testCode: `\nconst app = require(\"./main\");\ntest(\"task2\", () => {\n    expect(app.x).toBe(\"forty-two\");\n    expect(app.y).toBe(13);\n    expect(app.z).toBe(\"The answer is 42\");\n    expect(app.coffees).toEqual(['French Roast', 'Colombian', 'Kona']);\n});`,\n            exportCode: `\nexports.x = x;\nexports.y = y;\nexports.z = z;\nexports.coffees = coffees;`,\n            pastAnswers: [],\n            startDateTime: null,\n            completedDateTime: null,\n        },\n        {\n            questionTitle: \"Basic Functions\",\n            questionTutorial: \"In JavaScript, we first have to declare functions as functions.\\n Also, replace the : with curly braces {}\",\n            questionText: \"Please convert the following to JavaScript syntax!\",\n            hint: \"Look up how to write a simple Javascript function on MDN\",\n            answer: \"def square(num):\\n      return num * num\",\n            defaultAnswer: \"def square(num):\\n      return num * num\",\n            feedbackText: \"\",\n            completed: false,\n            type: QuestionType.EditableCode,\n            testCode: `\nconst app = require(\"./main\");\ntest(\"square\", () => {\n    expect(app.square(3)).toBe(9);\n    expect(app.square(-3)).toBe(9);\n    expect(app.square(0)).toBe(0);\n});`,\n            exportCode: \"\\nexports.square = square;\",\n            pastAnswers: [],\n            startDateTime: null,\n            completedDateTime: null,\n        },\n        {\n            questionTitle: \"Arrow functions\",\n            questionTutorial: `An arrow function has a shorter syntax compared to function expressions.\\n`+\n                `Arrow functions are always anonymous and can be defined using ()=>{} this syntax.\n            `,\n            questionText: \"Please convert 'square' into an arrow function\",\n            hint: \"Look up how to write a arrow functions on MDN\",\n            answer: `function square(num) {\n    return num * num;\n}`,\n            defaultAnswer: `function square(num) {\n    return num * num;\n}`,\n            feedbackText: \"\",\n            completed: false,\n            type: QuestionType.EditableCode,\n            testCode: `\nconst app = require(\"./main\");\ntest(\"square\", () => {\n    expect(app.square(3)).toBe(9);\n    expect(app.square(-3)).toBe(9);\n    expect(app.square(0)).toBe(0);\n    expect(app.square.toString().includes(\"=>\")).toBeTruthy();\n});`,\n            exportCode: \"\\nexports.square = square;\",\n            pastAnswers: [],\n            startDateTime: null,\n            completedDateTime: null,\n        },\n        {\n            questionTitle: \"Control Flow: if-else\",\n            questionTutorial: \"If and else statement are same as python except use '{}' instead of ':'!\\n Using if-else, define a function odd(x) that returns True when its integer argument is an odd number and False otherwise\\n\",\n            questionText: \"Define a function odd(x)\",\n            hint: \"if-else statements are surrounded by curly braces\",\n            answer: `function odd(x) {\n\n}`,\n            defaultAnswer: `function odd(x) {\n\n}`,\n            feedbackText: \"\",\n            completed: false,\n            type: QuestionType.EditableCode,\n            testCode: `\nconst app = require(\"./main\");\ntest(\"default\", () => {\n    expect(app.odd(1)).toBeTruthy();\n    expect(app.odd(2)).not.toBeTruthy();\n    expect(app.odd(3)).toBeTruthy();\n    expect(app.odd(0)).not.toBeTruthy();\n});`,\n            exportCode: '\\nexports.odd = odd;',\n            pastAnswers: [],\n            startDateTime: null,\n            completedDateTime: null,\n        },\n        {\n            questionTitle: \"Control Flow: switch\",\n            questionTutorial: `Switch case are similar to if and else cases except that they allow for more than 2 checks.\\n Using switch, write a function getPrice that takes in the name of a fruit and returns the price of the fruit. Oranges are $1, apples are $2, and bananas are $3. If the fruit is none of the 3, return an apology. Sample execution below:`,\n            questionText: \"Write the function 'getPrice()'\",\n            hint: \"Switch Statements can be defined using switch(params){case param1:....}\",\n            answer: `\nfunction getPrice(fruits) {\n}\ngetPrice('oranges') // returns \"$1\"\ngetPrice('apples') // returns \"$2\"\ngetPrice('pears') // returns \"Sorry, we are out of pears.\"\n`,\n            defaultAnswer: `\nfunction getPrice(fruits) {\n}\ngetPrice('oranges') // returns \"$1\"\ngetPrice('apples') // returns \"$2\"\ngetPrice('pears') // returns \"Sorry, we are out of pears.\"\n`,\n            feedbackText: \"\",\n            completed: false,\n            type: QuestionType.EditableCode,\n            testCode: `\nconst app = require(\"./main\");\ntest(\"default\", () => {\n    expect(app.getPrice(\"oranges\")).toBe(\"$1\");\n    expect(app.getPrice(\"apples\")).toBe(\"$2\");\n    expect(app.getPrice(\"bananas\")).toBe(\"$3\");\n    expect(app.getPrice(\"other\")).toBe(\"Sorry, we are out of other fruits.\");\n});`,\n            exportCode: '\\nexports.getPrice = getPrice;',\n            pastAnswers: [],\n            startDateTime: null,\n            completedDateTime: null,\n        },\n        {\n            questionTitle: \"Loops and Iterations: for loop\",\n            questionTutorial: \"The for statement creates a loop that is executed as long as a condition is true. Instead of ':' use '{}'\",\n            questionText: \"Please convert the following to JavaScript syntax!\",\n            hint: \"Write a for-of loop which looks something like this: for (let i = 0; i < 5; i++) {\",\n            answer: `let steps = [];\n// A for-loop\nfor step in range(5):\n    steps.append(\"i am at step: \" + step),\n`,\n            defaultAnswer: `let steps = [];\n// A for-loop\nfor step in range(5):\n    steps.append(\"i am at step: \" + step),\n`,\n            feedbackText: \"\",\n            completed: false,\n            type: QuestionType.EditableCode,\n            testCode: `\nconst app = require(\"./main\");\ntest(\"default\", () => {\n    expect(app.steps).toEqual(['i am at step: 0', 'i am at step: 1', 'i am at step: 2', 'i am at step: 3', 'i am at step: 4']);\n});`,\n            exportCode: `\nexports.steps = steps;`,\n            pastAnswers: [],\n            startDateTime: null,\n            completedDateTime: null,\n        },\n        {\n            questionTitle: \"Working with Objects\",\n            questionTutorial: \"Objects are similar to Python dictionaries, they hold a key:value pairing. An example of initialising a object is as shown below:\\n\",\n            questionText: \"Using a for..in loop, add all available properties of myCar into an array\",\n            hint: \"Write a for-in loop which looks something like this: for (k in myCar)\",\n            answer: `\nconst myCar = {};\nmyCar.make = 'Ford';\nmyCar.model = 'Mustang';\nmyCar.year = 1969;\n\nconst res = []\n\nfor k in myCar.keys():\n   res.append(myCar[k]) \n            `,\n            defaultAnswer: `\nconst myCar = {};\nmyCar.make = 'Ford';\nmyCar.model = 'Mustang';\nmyCar.year = 1969;\n\nconst res = []\n\nfor k in myCar.keys():\n   res.append(myCar[k]) \n            `,\n            feedbackText: \"\",\n            completed: false,\n            type: QuestionType.EditableCode,\n            testCode: `\nconst app = require(\"./main\");\ntest(\"task 8\", () => {\n    expect(app.res.length).toBe(3);\n});`,\n            exportCode: `\nexports.res = res;`,\n            pastAnswers: [],\n            startDateTime: null,\n            completedDateTime: null,\n        },\n        {\n            questionTitle: \"Promises\",\n            questionTutorial: \"Please answer the following MCQ qns.\",\n            questionText: [`The Promise concept is not available to Python and is native to JavaScript. The Promise object represents the eventual completion (or failure) of an asynchronous operation, and its resulting value.\nBy using .then function, a promise can be can be resolved.\nThe .catch function will run if there are errors in the code.\nThe .finally function will always run at the end of the stream.\n\nWhat will the following code log?\n         \nnew Promise((resolve, reject) => {\n        console.log('Initial');\n        resolve();\n    })\n    .then(() => {\n        throw new Error('Something failed');\n        console.log('Do this');\n    })\n    .catch(() => {\n        console.error('Do that');\n    })\n    .then(() => {\n        console.log('Do this, no matter what');\n    });`,\n                `Initial\nDo this`,\n                `Initial\nDo this\nDo that`,\n                `Initial\nDo that\nDo this, no matter what`,\n                `Initial\nSomething failed\nDo this\nDo that`\n            ],\n            answer: 3,\n            defaultAnswer: '',\n            hint: \"\",\n            feedbackText: \"\",\n            completed: false,\n            type: QuestionType.MultipleChoice,\n            testCode: '',\n            exportCode: '',\n            pastAnswers: [],\n            startDateTime: null,\n            completedDateTime: null,\n        },\n        {\n            questionTitle: \"Display Dynamic List\",\n            questionTutorial: \"Please look for the comments and edit the code as deem fit.\",\n            questionText: \"Using what you have learned previously, complete the 2 following functions.\\n 1. Write a function to add item into an array\\n 2. Write a function to map array to following functions in place of where the comment should be at\\n\\nThen add 4 items into the list.\",\n            answer: \"\",\n            defaultAnswer:\n                \"class List extends React.Component {\\n\" +\n                \"  constructor() {\\n\" +\n                \"    super()\\n\" +\n                \"    this.state = { \\n\" +\n                \"      input: '',\\n\" +\n                \"      inputList:[],\\n\" +\n                \"     }\\n\" +\n                \"     \\n\" +\n                \"     this.inputListExport = []\\n\" +\n                \"     this.insertElement=this.insertElement.bind(this)\\n\" +\n                \"     this.handleInputChange = this.handleInputChange.bind(this)\\n\" +\n                \"  }\\n\" +\n                \"  \\n\" +\n                \"  handleInputChange(e){\\n\" +\n                \"    this.setState({input:e.target.value})\\n\" +\n                \"  }\\n\" +\n                \"  \\n\" +\n                \"  insertElement(){\\n\" +\n                \"    let text = this.state.input\\n\" +\n                \"    let inputList = this.state.inputList\\n\" +\n                \"    //Please add text to the following inputList\\n\" +\n                \"    \\n\" +\n                \"    this.inputListExport = inputList\\n\" +\n                \"    this.setState({inputList:inputList})\\n\" +\n                \"  }\\n\" +\n                \"  \\n\" +\n                \"  renderList(){\\n\" +\n                \"    let res=[]\\n\" +\n                \"    let inputList = this.state.inputList\\n\" +\n                \"    // Add All object in inputList into res\\n\" +\n                \"    \\n\" +\n                \"      res.push(<li>{\\n\" +\n                \"       i\\n\" +\n                \"      }</li>)\\n\" +\n                \"    \\n\" +\n                \"    return res\\n\" +\n                \"  }\\n\" +\n                \"  \\n\" +\n                \"  render(){\\n\" +\n                \"    return(\\n\" +\n                \"    <div>\\n\" +\n                \"    <ol id=\\\"listDisplay\\\">{this.renderList()}</ol>\\n\" +\n                \"    <input type=\\\"text\\\" onChange={this.handleInputChange}/>\\n\" +\n                \"    <button onClick={this.insertElement}>Insert</button>\\n\" +\n                \"   </div>\\n\" +\n                \"    )\\n\" +\n                \"  }\\n\" +\n                \"}\",\n            hint: \"1. Fill in the commented sections by pushing text into inputList.\\n 2. Run a for loop with i and push all items i into res array.\",\n            feedbackText: \"\",\n            completed: false,\n            type: QuestionType.HTMLCode,\n            testCode: `\n            const app = require(\"./main\");\n            test(\"task 10\", () => {\n                expect(1).toBe(1);\n            });`,\n            exportCode: '',\n            pastAnswers: [],\n            startDateTime: null,\n            completedDateTime: null,\n        },\n    ]\n","import React from 'react';\nimport { firebaseApp } from \"../../util/firebase\";\nimport * as firebase from 'firebase';\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Icon from '@mdi/react';\nimport { mdiFacebookBox, mdiGoogle } from '@mdi/js';\nimport { withRouter } from 'react-router-dom';\nimport { RouteComponentProps } from \"react-router\";\n\nimport './Resume.css'\n\ntype MyProps = RouteComponentProps & {\n    userID: string,\n    onUserIDChange: (name: string) => void,\n    handleSaveState: () => void,\n    handleLoadState: (arg0:boolean) => void,\n};\n\nclass Resume extends React.Component<MyProps, {}> {\n\n    handleFacebook = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault();\n        const provider = new firebase.auth.FacebookAuthProvider();\n        firebaseApp.auth().signInWithPopup(provider).then((result) => {\n            //console.log('Facebook login success');\n            if (result !== null && result.user !== null && result.user.uid !== null) {\n                const userID = result.user.uid;\n                this.props.onUserIDChange(userID);\n                this.props.handleLoadState(true);\n                this.props.history.push('/questions');\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n    };\n\n    handleGoogle = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault();\n        const provider = new firebase.auth.GoogleAuthProvider();\n        firebaseApp.auth().signInWithPopup(provider).then((result) => {\n            //console.log('Google login success');\n            if (result !== null && result.user !== null && result.user.uid !== null) {\n                const userID = result.user.uid;\n                this.props.onUserIDChange(userID);\n                this.props.handleLoadState(true);\n                this.props.history.push('/questions');\n\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n    };\n\n    render() {\n        return (\n            <div style={{ width: 425 }}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} className='d-flex align-items-center justify-content-center'>\n                        <span style={{ color: 'white', textAlign: \"center\", fontWeight: 'bold' }}>\n                            Type in your past user ID to continue or login to save your progress\n                        </span>\n                    </Grid>\n                    <Grid item xs={12} className='d-flex align-items-center justify-content-center'>\n                        <div className='w-100'>\n                            <label className=\"field a-field a-field_a3\">\n                                <input className=\"field__input a-field__input\" value={this.props.userID}\n                                    onChange={(e) => { this.props.onUserIDChange(e.target.value) }}\n                                />\n                                <span className=\"a-field__label-wrap\">\n                                    <span className=\"a-field__label\">Enter User ID</span>\n                                </span>\n                            </label>\n                            <div className='d-flex'>\n                                <Button variant=\"outlined\" className='button-start' size='large'\n                                    onClick={this.props.handleSaveState}>\n                                    SAVE\n                                </Button>\n                                <Button variant=\"outlined\" className='button-start ml-auto' size='large'\n                                    onClick={()=>this.props.handleLoadState(true)}>\n                                    LOAD\n                                </Button>\n                            </div>\n                        </div>\n                    </Grid>\n                    {/*<Grid item xs={12} className='d-flex align-items-center justify-content-center'>*/}\n                    {/*    <Button variant=\"outlined\" onClick={this.handleFacebook} className='resume-auth' fullWidth>*/}\n                    {/*        <span><Icon path={mdiFacebookBox} size={1} style={{ fill: 'white' }} /> Facebook</span>*/}\n                    {/*    </Button>*/}\n                    {/*</Grid>*/}\n                    <Grid item xs={12} className='d-flex align-items-center justify-content-center'>\n                        <Button variant=\"outlined\" onClick={this.handleGoogle} className='resume-auth' fullWidth>\n                            <span><Icon path={mdiGoogle} size={1} style={{ fill: 'white' }} /> Google</span>\n                        </Button>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Resume);\n\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {RouteComponentProps} from \"react-router\";\nimport {Container} from \"react-bootstrap\";\nimport Typist from \"react-typist\";\nimport 'react-typist/dist/Typist.css';\nimport {firebaseApp} from \"../../util/firebase\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Icon from \"@mdi/react\";\nimport {mdiGoogle} from \"@mdi/js\";\nimport Divider from \"@material-ui/core/Divider\";\nimport * as firebase from \"firebase\";\n\ntype MyProps = RouteComponentProps & {\n    handleSaveState: () => void,\n    handleStart: () => void,\n    onUserIDChange: (userID: string) => void,\n    userID: string,\n};\n\nclass Signup extends React.Component<MyProps, {}> {\n\n    state = {\n        uidArray: [],\n    };\n\n    componentDidMount(): void {\n        let db = firebaseApp.database().ref(`/userdata`);\n        db.once('value').then((snapshot) => {\n            const data = snapshot.val();\n            let uidArray = Object.keys(data);\n            this.setState({uidArray: uidArray})\n        }).catch(err => {\n            console.error(err);\n        });\n    }\n\n    onSignup = (e:any) =>{\n        e.preventDefault();\n        this.props.handleSaveState();\n        window.setTimeout(()=>{\n            this.props.handleStart();\n        },1000)\n    };\n\n    handleGoogle = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault();\n        const provider = new firebase.auth.GoogleAuthProvider();\n        firebaseApp.auth().signInWithPopup(provider).then((result) => {\n            //console.log('Google login success');\n            if (result !== null && result.user !== null && result.user.uid !== null) {\n                const userID = result.user.uid;\n                this.props.onUserIDChange(userID);\n                this.props.handleSaveState();\n                window.setTimeout(()=>{\n                    this.props.handleStart();\n                },1000)\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n    };\n\n    render() {\n        return (\n            <div style={{width: 425}}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} className='d-flex align-items-center justify-content-center'>\n                        <Typist className='signup-title'>\n                            Hi, nice to meet you! Please enter your name. This will be used to save your progress later\n                            on!\n                        </Typist>\n                    </Grid>\n                    <Grid item xs={12} className='d-flex align-items-center justify-content-center'>\n\n                        <div className='w-100'>\n                            <form onSubmit={this.onSignup}>\n                                <label className=\"field a-field a-field_a3\">\n                                    <input className=\"field__input a-field__input\" value={this.props.userID} required\n                                           onChange={(e) => {\n                                               this.props.onUserIDChange(e.target.value)\n                                           }}\n                                    />\n                                    <span className=\"a-field__label-wrap\">\n                                    <span className=\"a-field__label\">Enter User ID</span>\n                                </span>\n                                </label>\n                                <div className='d-flex'>\n                                    <Button variant=\"outlined\" className='button-start ml-auto' size='large'\n                                            type='submit'>\n                                        CONTINUE\n                                    </Button>\n                                </div>\n                            </form>\n                        </div>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Divider variant='middle' style={{backgroundColor: '#fff'}}/>\n                    </Grid>\n                    <Grid item xs={12} className='d-flex align-items-center justify-content-center'>\n                        <Button variant=\"outlined\" onClick={this.handleGoogle} className='resume-auth' fullWidth>\n                            <span><Icon path={mdiGoogle} size={1} style={{ fill: 'white' }} /> Google</span>\n                        </Button>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n\n\n}\n\nexport default withRouter(Signup);\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {RouteComponentProps} from \"react-router\";\nimport Typist from \"react-typist\";\nimport 'react-typist/dist/Typist.css';\nimport Button from \"@material-ui/core/Button\";\nimport AceEditor from \"react-ace\";\nimport {QuestionIface} from \"../Form/Question\";\n\ntype MyProps = RouteComponentProps & {\n    loggedIn: boolean,\n    questions: QuestionIface[],\n    handleStart: () => void,\n};\n\nclass Home extends React.Component<MyProps, {}> {\n\n    handleResume = () => {\n        this.props.history.push('/load');\n\n    };\n\n    handleAbout = () => {\n        this.props.history.push('/about');\n    };\n\n    render() {\n        const questions = this.props.questions;\n        return (\n            <div className='d-flex align-items-center justify-content-center flex-column'>\n                <Typist className='title-font'>\n                    Learn how to script in JavaScript from Python!\n                </Typist>\n                <div className='d-flex align-items-center justify-content-center flex-column'\n                     style={{marginTop: '25px'}}>\n                    <AceEditor\n                        readOnly={false}\n                        wrapEnabled\n                        height='50vh'\n                        width='70vw'\n                        fontSize={16}\n                        showPrintMargin={false}\n                        mode=\"javascript\"\n                        theme=\"monokai\"\n                        name=\"info-section\"\n                        tabSize={0}\n                        editorProps={{\n                            $blockScrolling: true,\n                        }}\n                        value={questions[0].questionText as string}\n                    />\n                </div>\n                <div className='d-flex align-items-center' style={{width:'100%'}}>\n                    <Button variant=\"outlined\" className='button-start' size='large'\n                            onClick={this.handleResume}>\n                        RESUME\n                    </Button>\n                    <Button variant=\"outlined\" className='button-start' size='large' style={{marginLeft:10}}\n                            onClick={this.handleAbout}>\n                        ABOUT US\n                    </Button>\n                    <Button variant=\"outlined\" className='button-start ml-auto' size='large'\n                            onClick={this.props.handleStart}>\n                        START\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Home);\n","import React from 'react';\nimport {Container, Row, Col, Carousel} from 'react-bootstrap';\nimport {withRouter} from 'react-router-dom';\nimport {RouteComponentProps} from \"react-router\";\nimport Typist from \"react-typist\";\nimport './About.css';\n\ntype MyProps = RouteComponentProps & {};\n\nclass About extends React.Component<MyProps, {}> {\n\n\n    render() {\n        return (\n            <Container fluid style={{width: \"80%\"}}>\n                <Row>\n                    <Col xs={6}>\n                        <Typist className='signup-title'>\n                            About Us\n                        </Typist>\n                        <p style={{color: \"white\"}}>We are Team Richu and this is our web application to teach students\n                            how to translate Python to JavaScript. This web application was made for our BT3103\n                            Application Systems Development for Business Analytics Module.\n                        </p>\n                        <p style={{color: \"white\"}}>\n                            We came up with this idea through surveying the student population in NUS and found a gap of\n                            knowledge of not knowing JavaScript but still had a basic understanding of coding concepts.\n                            Hence these 10 questions were developed using the MDN web resource to help users learn how\n                            to translate python (the most commonly known language based on our survey) to JavaScript (the\n                            language students wanted to learn most). Some barriers of learning included inconvenience\n                            and steep learning curve. We hope that this project bridges the gap and solves this problem\n                            for students.\n                        </p>\n                        <p style={{color: \"white\"}}>\n                            Our main target audience will be students who are required to take a mod in JavaScript and\n                            either have not learnt the language before or need some revision. Hence this web page can be\n                            recommended as a preparation material for students taking those modules.</p>\n                    </Col>\n                    <Col xs={6}>\n                        <Carousel className='h-100'>\n                            <Carousel.Item className='slide-item'>\n                                <h6>This web application has helped me to revise on crucial concepts before\n                                    taking a technical test for a job application! <br/><br/>-Shao Yang<br/>Year 4\n                                    Business Analytics Student </h6>\n                            </Carousel.Item>\n                            <Carousel.Item className='slide-item'>\n                                <h6>Through this web application, I learnt how to better utilise the resources that are\n                                    online\n                                    which I previously found hard to navigate. Now I am comfortable learning new\n                                    concepts\n                                    on my own!<br/><br/>-John Poh<br/>Year 2 Life Science Student</h6>\n\n                            </Carousel.Item>\n                            <Carousel.Item className='slide-item'>\n                                <h6>As a business student, web development is a good skill to pick up, this course is a\n                                    good intermediary for me to learn JavaScript to pick up web development skills in\n                                    the future. <br/><br/>-Clarence<br/>Year 2 Business Student</h6>\n\n                            </Carousel.Item>\n                        </Carousel>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n\n}\n\nexport default withRouter(About);\n","import React, {Component} from 'react';\nimport {Container} from 'react-bootstrap';\nimport {Route, Switch, withRouter} from 'react-router-dom';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from \"@material-ui/core/Slide\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SliderMenu from \"./components/Navigation/SliderMenu\";\nimport axios from \"axios\";\nimport {firebaseApp} from './util/firebase';\nimport {RouteComponentProps} from \"react-router\";\nimport QuestionInterface from './components/Question/QuestionInterface'\nimport './App.css';\nimport {questions} from \"./QuestionList\";\nimport Resume from \"./components/Resume/Resume\";\nimport {QuestionIface} from \"./components/Form/Question\";\nimport Signup from \"./components/SignupPage/Signup\";\nimport Home from \"./components/Home/Home\";\nimport About from \"./components/About/About\";\n\nexport interface BackendResponse {\n    data: {\n        htmlFeedback: string;\n        isComplete: boolean;\n        jsonFeedback: any;\n        textFeedback: string;\n    }\n};\n\nclass App extends Component<RouteComponentProps> {\n\n    state = {\n        openMenu: false,\n        question: 0, // idx of current question that user is on\n        returnedData: null,\n        questions: questions,\n        feedbackRating: 0, // feedback rating out of 5\n        isLoading: false,\n        showAlert: false,\n        showSnackBar: false,\n        loggedIn: false,\n        uid: '',\n        timeVisited: new Date(),\n    };\n\n    componentDidMount(): void {\n        firebaseApp.auth().onAuthStateChanged(user => {\n            if (user) {\n                let currentuser = firebaseApp.auth().currentUser;\n                if (currentuser !== null) {\n                    this.setState({\n                        uid: currentuser.uid,\n                        username: currentuser.displayName,\n                        loggedIn: true,\n                    });\n                    this.handleLoadState(true)\n                }\n            } else {\n                this.setState({loggedIn: false})\n            }\n        });\n        let questions = this.state.questions;\n        if (questions[0].startDateTime === null) {\n            questions[0].startDateTime = this.state.timeVisited;\n        }\n        this.setState({questions});\n    }\n\n    handleMenu = (isOpen: boolean) => {\n        this.setState({openMenu: isOpen})\n    };\n\n\n    handleClickQuestion = (i: number) => {\n        this.setState({\n            openMenu: false,\n            question: i,\n            showAlert: false,\n        });\n    };\n\n    handleMenuStateChange = (state: any) => {\n        this.setState({openMenu: state.isOpen})\n    };\n\n    handleStart = () => {\n        if (this.state.loggedIn) {\n            this.props.history.push('/questions');\n            let questions = this.state.questions;\n            if (questions[1].startDateTime === null) {\n                questions[1].startDateTime = new Date();\n            }\n            this.handleSaveState();\n            this.setState({question: 1, openMenu: false, questions: questions})\n        } else{\n            this.props.history.push('/signup');\n        }\n    };\n\n    handleNextQuestion = () => {\n        this.setState({question: this.state.question + 1, showAlert: false});\n        let questions = this.state.questions;\n        if (this.state.question === this.state.questions.length - 1 && this.state.questions[0].completedDateTime === null) {\n            questions[0].completedDateTime = new Date();\n        } else if (questions[this.state.question].startDateTime === null) {\n            questions[this.state.question].startDateTime = new Date();\n        }\n        this.setState({questions: questions});\n        window.setTimeout(() => {\n            if (this.state.loggedIn) {\n                this.handleSaveState();\n            }\n        }, 1000)\n    };\n\n    handlePrevQuestion = () => {\n        this.setState({question: this.state.question - 1, showAlert: false})\n    };\n\n    handleAlertClose = () => {\n        this.setState({showAlert: false})\n    };\n\n    handleStartOver = () => {\n        // TODO clear progress of app\n        this.setState({question: 0})\n    };\n\n    handleResetAnswer = () => {\n        let questions = this.state.questions;\n        let question = questions[this.state.question];\n        question.answer = question.defaultAnswer;\n        this.setState({questions})\n    };\n\n    handleCheckAnswer = async () => {\n        //Add in fetch nonsense\n        this.setState({isLoading: true, showAlert: false});\n        let gatewayURL = \"https://cl8r4dbpqe.execute-api.us-east-1.amazonaws.com/Prod/\";\n        let questionURL = gatewayURL + `?question=${this.state.question}`;\n        let answer = {\n            \"userToken\": \"ABCDE\",\n            \"shown\": {\n                \"0\": this.state.questions[this.state.question].testCode\n            },\n            \"editable\": {\n                \"0\": this.state.questions[this.state.question].answer + this.state.questions[this.state.question].exportCode\n            },\n            \"hidden\": {\n                \"0\": `{\\n\"scripts\":{ \"test\":\"jest\" }\\n}`,\n            }\n        };\n        try {\n            const res: BackendResponse = await axios.post(questionURL, {...answer}, {\n                headers: {\n                    Accept: 'application/json',\n                }\n            });\n            let questions = this.state.questions;\n            questions[this.state.question].completed = res.data.isComplete;\n            questions[this.state.question].feedbackText = res.data.htmlFeedback;\n            questions[this.state.question].pastAnswers.push({\n                pass: res.data.isComplete,\n                pastAnswer: questions[this.state.question].answer,\n                errorMessage: res.data.htmlFeedback,\n            });\n            if (questions[this.state.question].completedDateTime === null && res.data.isComplete) {\n                questions[this.state.question].completedDateTime = new Date();\n            }\n\n            // update firebase with attempt statistics\n            let db = firebaseApp.database().ref(`/logging/${this.state.question}`);\n            await db.once('value').then((snapshot) => {\n                let data = snapshot.val();\n                if (data !== null) {\n                    data.totalTries += 1;\n                    if (res.data.isComplete) {\n                        data.correctAnswer += 1;\n                    } else {\n                        data.wrongAnswer += 1;\n                    }\n                } else {\n                    if (res.data.isComplete) {\n                        data = {\n                            correctAnswer: 1,\n                            wrongAnswer: 0,\n                            totalTries: 1,\n                        }\n                    } else {\n                        data = {\n                            correctAnswer: 0,\n                            wrongAnswer: 1,\n                            totalTries: 1,\n                        }\n                    }\n                }\n                db.update(data);\n            }).catch(err => {\n                console.error(err);\n            });\n\n            this.setState({questions: questions});\n            if (this.state.loggedIn) {\n                this.handleSaveState();\n            }\n        } catch (err) {\n            console.error(err);\n        } finally {\n            this.setState({isLoading: false, showAlert: true});\n        }\n\n    };\n\n    handleSaveState = () => {\n        const name = this.state.uid;\n        let data = {\n            questions: this.state.questions,\n            userId: name,\n            feedbackRating: this.state.feedbackRating,\n            currentQuestion: this.state.question,\n        };\n        firebaseApp.database().ref(`/userdata/${name}`).update(data);\n        this.setState({loggedIn: true});\n        // window.setTimeout(() => this.handleLoadState(false), 1000);\n        // this.props.history.push('/');\n        console.log(\"saved data to firebase!\")\n    };\n\n    handleLoadState = (showSnackBar: boolean) => {\n        const name = this.state.uid;\n        let db = firebaseApp.database().ref(`/userdata/${name}`);\n        db.once('value').then((snapshot) => {\n            const data = snapshot.val();\n            if (data !== null) {\n                let questions: QuestionIface[] = Object.values(data.questions);\n                for (let q of questions) {\n                    if (q.pastAnswers) {\n                        q.pastAnswers = Object.values(q.pastAnswers);\n                    } else {\n                        q.pastAnswers = [];\n                    }\n                    if (!q.completedDateTime) {\n                        q.completedDateTime = null\n                    }\n                    if (!q.startDateTime) {\n                        q.startDateTime = null\n                    }\n                }\n                this.setState({\n                    questions: questions,\n                    feedbackRating: data.feedbackRating,\n                    question: data.currentQuestion,\n                    loggedIn: true\n                });\n                // close menu and open snackbar\n                if (showSnackBar) {\n                    this.setState({\n                        showSnackBar: true,\n                        openMenu: false,\n                    });\n                }\n                this.props.history.push('/');\n            }\n        }).catch(err => {\n            console.error(err);\n        });\n    };\n\n    toggleAdmin = () => {\n        const pw = prompt('Please enter password');\n        if (pw === \"richu\") {\n            const questions = this.state.questions;\n            questions.forEach(q => {\n                q.completed = true;\n            });\n            this.props.history.push('/');\n            this.setState({\n                questions: questions,\n                question: 1,\n                openMenu: false\n            });\n        }\n    };\n\n    toggleComplete = (isComplete: boolean) => {\n        let questions = this.state.questions;\n        questions[this.state.question].completed = isComplete;\n        if (isComplete) {\n            questions[this.state.question].completedDateTime = new Date();\n        }\n        this.setState({questions: questions})\n    };\n\n    onUserIDChange = (name: string) => {\n        this.setState({uid: name})\n    };\n\n    render() {\n        const currQ = this.state.question;\n        return (\n            <div className=\"App\">\n                <SliderMenu open={this.state.openMenu} handleMenu={this.handleMenu}\n                            handleMenuStateChange={this.handleMenuStateChange}\n                            handleClickQuestion={this.handleClickQuestion}\n                            handleStart={this.handleStart}\n                            questions={this.state.questions}\n                            question={currQ}\n                            toggleAdmin={this.toggleAdmin}\n                            handleSaveState={this.handleSaveState}\n                            handleLoadState={this.handleLoadState}\n                            userID={this.state.uid}\n                            onUserIDChange={this.onUserIDChange}\n                />\n                <Container fluid className='d-flex align-items-center justify-content-center flex-column p-5 h-100'\n                           id='page-wrap'>\n\n                    <Switch>\n                        <Route exact path=\"/\" render={(props) => <Home {...props} questions={this.state.questions}\n                                                                       loggedIn={this.state.loggedIn}\n                                                                       handleStart={this.handleStart}\n                        />}/>\n                        <Route exact path=\"/about\" component={About}/>\n                        <Route exact path=\"/questions\"\n                               render={(props) => <QuestionInterface {...props} questions={this.state.questions}\n                                                                     question={currQ} handleStart={this.handleStart}\n                                                                     feedbackRating={this.state.feedbackRating}\n                                                                     handleStartOver={this.handleStartOver}\n                                                                     showAlert={this.state.showAlert}\n                                                                     handleNextQuestion={this.handleNextQuestion}\n                                                                     handlePrevQuestion={this.handlePrevQuestion}\n                                                                     handleCheckAnswer={this.handleCheckAnswer}\n                                                                     handleResetAnswer={this.handleResetAnswer}\n                                                                     toggleComplete={this.toggleComplete}\n                                                                     isLoading={this.state.isLoading}\n                                                                     handleAlertClose={this.handleAlertClose}\n                                                                     handleClickQuestion={this.handleClickQuestion}\n                                                                     saveState={this.handleSaveState}\n                                                                     onFeedbackRatingChange={(n) => {\n                                                                         this.setState({feedbackRating: n});\n                                                                     }}\n                                                                     loggedIn={this.state.loggedIn}\n\n                               />}/>\n                        <Route exact path='/load' render={(props) => <Resume {...props}\n                                                                             handleSaveState={this.handleSaveState}\n                                                                             handleLoadState={this.handleLoadState}\n                                                                             userID={this.state.uid}\n                                                                             onUserIDChange={this.onUserIDChange}\n                        />}/>\n                        <Route exact path='/signup' render={(props) => <Signup {...props}\n                                                                               handleSaveState={this.handleSaveState}\n                                                                               onUserIDChange={this.onUserIDChange}\n                                                                               userID={this.state.uid}\n                                                                               handleStart={this.handleStart}\n                        />}/>\n                    </Switch>\n                    {this.state.showSnackBar ?\n                        <Snackbar anchorOrigin={{horizontal: 'right', vertical: 'bottom'}}\n                                  open={this.state.showSnackBar}\n                                  autoHideDuration={3000}\n                                  onClose={() => {\n                                      this.setState({showSnackBar: false})\n                                  }}\n                                  message={<span id=\"message-id\">Profile has been successfully loaded.</span>}\n                                  action={\n                                      <IconButton\n                                          key=\"close\"\n                                          color=\"inherit\"\n                                          onClick={() => {\n                                              this.setState({showSnackBar: false})\n                                          }}\n                                      >\n                                          <CloseIcon/>\n                                      </IconButton>\n                                  }\n                                  TransitionComponent={(props) => {\n                                      return <Slide {...props} direction=\"up\"/>\n                                  }}\n                        /> : \"\"\n                    }\n                </Container>\n            </div>\n        )\n            ;\n    }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router >\n        <App/>\n    </Router>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}